<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Web.Http.OData</name>
    </assembly>
    <members>
        <member name="T:System.Threading.Tasks.TaskHelpers">
            <summary>
            Helpers for safely using Task libraries. 
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.Canceled">
            <summary>
            Returns a canceled Task. The task is completed, IsCanceled = True, IsFaulted = False.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.Canceled``1">
            <summary>
            Returns a canceled Task of the given type. The task is completed, IsCanceled = True, IsFaulted = False.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.Completed">
            <summary>
            Returns a completed task that has no result. 
            </summary>        
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.FromError(System.Exception)">
            <summary>
            Returns an error task. The task is Completed, IsCanceled = False, IsFaulted = True
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.FromError``1(System.Exception)">
            <summary>
            Returns an error task of the given type. The task is Completed, IsCanceled = False, IsFaulted = True
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.FromErrors(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Returns an error task of the given type. The task is Completed, IsCanceled = False, IsFaulted = True
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.FromErrors``1(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Returns an error task of the given type. The task is Completed, IsCanceled = False, IsFaulted = True
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.FromResult``1(``0)">
            <summary>
            Returns a successful completed task with the given result.  
            </summary>        
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.Iterate(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Return a task that runs all the tasks inside the iterator sequentially. It stops as soon
            as one of the tasks fails or cancels, or after all the tasks have run succesfully.
            </summary>
            <param name="asyncIterator">collection of tasks to wait on</param>
            <param name="cancellationToken">cancellation token</param>
            <param name="disposeEnumerator">whether or not to dispose the enumerator we get from <paramref name="asyncIterator"/>.
            Only set to <c>false</c> if you can guarantee that <paramref name="asyncIterator"/>'s enumerator does not have any resources it needs to dispose.</param>
            <returns>a task that signals completed when all the incoming tasks are finished.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.IterateImpl(System.Collections.Generic.IEnumerator{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Provides the implementation of the Iterate method.
            Contains special logic to help speed up common cases.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.IterateImplIncompleteTask(System.Collections.Generic.IEnumerator{System.Threading.Tasks.Task},System.Threading.Tasks.Task,System.Threading.CancellationToken)">
            <summary>
            Fallback for IterateImpl when the antecedent Task isn't yet complete.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.RunSynchronously(System.Action,System.Threading.CancellationToken)">
            <summary>
            Replacement for Task.Factory.StartNew when the code can run synchronously. 
            We run the code immediately and avoid the thread switch. 
            This is used to help synchronous code implement task interfaces.
            </summary>
            <param name="action">action to run synchronouslyt</param>
            <param name="token">cancellation token. This is only checked before we run the task, and if cancelled, we immediately return a cancelled task.</param>
            <returns>a task who result is the result from Func()</returns>
            <remarks>
            Avoid calling Task.Factory.StartNew.         
            This avoids gotchas with StartNew:
            - ensures cancellation token is checked (StartNew doesn't check cancellation tokens).
            - Keeps on the same thread. 
            - Avoids switching synchronization contexts.
            Also take in a lambda so that we can wrap in a try catch and honor task failure semantics.        
            </remarks>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.RunSynchronously``1(System.Func{``0},System.Threading.CancellationToken)">
            <summary>
            Replacement for Task.Factory.StartNew when the code can run synchronously. 
            We run the code immediately and avoid the thread switch. 
            This is used to help synchronous code implement task interfaces.
            </summary>
            <typeparam name="TResult">type of result that task will return.</typeparam>
            <param name="func">function to run synchronously and produce result</param>
            <param name="cancellationToken">cancellation token. This is only checked before we run the task, and if cancelled, we immediately return a cancelled task.</param>
            <returns>a task who result is the result from Func()</returns>
            <remarks>
            Avoid calling Task.Factory.StartNew.         
            This avoids gotchas with StartNew:
            - ensures cancellation token is checked (StartNew doesn't check cancellation tokens).
            - Keeps on the same thread. 
            - Avoids switching synchronization contexts.
            Also take in a lambda so that we can wrap in a try catch and honor task failure semantics.        
            </remarks>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.RunSynchronously``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Overload of RunSynchronously that avoids a call to Unwrap(). 
            This overload is useful when func() starts doing some synchronous work and then hits IO and 
            needs to create a task to finish the work. 
            </summary>
            <typeparam name="TResult">type of result that Task will return</typeparam>
            <param name="func">function that returns a task</param>
            <param name="cancellationToken">cancellation token. This is only checked before we run the task, and if cancelled, we immediately return a cancelled task.</param>
            <returns>a task, created by running func().</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.SetIfTaskFailed``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>
            Update the completion source if the task failed (cancelled or faulted). No change to completion source if the task succeeded. 
            </summary>
            <typeparam name="TResult">result type of completion source</typeparam>
            <param name="tcs">completion source to update</param>
            <param name="source">task to update from.</param>
            <returns>true on success</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>
            Set a completion source from the given Task.
            </summary>
            <typeparam name="TResult">result type for completion source.</typeparam>
            <param name="tcs">completion source to set</param>
            <param name="source">Task to get values from.</param>
            <returns>true if this successfully sets the completion source.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpers.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.Task)">
            <summary>
            Set a completion source from the given Task. If the task ran to completion and the result type doesn't match
            the type of the completion source, then a default value will be used. This is useful for converting Task into
            Task{AsyncVoid}, but it can also accidentally be used to introduce data loss (by passing the wrong
            task type), so please execute this method with care.
            </summary>
            <typeparam name="TResult">result type for completion source.</typeparam>
            <param name="tcs">completion source to set</param>
            <param name="source">Task to get values from.</param>
            <returns>true if this successfully sets the completion source.</returns>
        </member>
        <member name="T:System.Threading.Tasks.TaskHelpers.AsyncVoid">
            <summary>
            Used as the T in a "conversion" of a Task into a Task{T}
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.TaskHelpers.CancelCache`1">
            <summary>
            This class is a convenient cache for per-type cancelled tasks
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Catch(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.CatchInfo,System.Threading.Tasks.CatchInfoBase{System.Threading.Tasks.Task}.CatchResult},System.Threading.CancellationToken)">
            <summary>
            Calls the given continuation, after the given task completes, if it ends in a faulted state.
            Will not be called if the task did not fault (meaning, it will not be called if the task ran
            to completion or was canceled). Intended to roughly emulate C# 5's support for "try/catch" in
            async methods. Note that this method allows you to return a Task, so that you can either return
            a completed Task (indicating that you swallowed the exception) or a faulted task (indicating that
            that the exception should be propagated). In C#, you cannot normally use await within a catch
            block, so returning a real async task should never be done from Catch().
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Catch``1(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.CatchInfo{``0},System.Threading.Tasks.CatchInfoBase{System.Threading.Tasks.Task{``0}}.CatchResult},System.Threading.CancellationToken)">
            <summary>
            Calls the given continuation, after the given task completes, if it ends in a faulted state.
            Will not be called if the task did not fault (meaning, it will not be called if the task ran
            to completion or was canceled). Intended to roughly emulate C# 5's support for "try/catch" in
            async methods. Note that this method allows you to return a Task, so that you can either return
            a completed Task (indicating that you swallowed the exception) or a faulted task (indicating that
            that the exception should be propagated). In C#, you cannot normally use await within a catch
            block, so returning a real async task should never be done from Catch().
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.CopyResultToCompletionSource``1(System.Threading.Tasks.Task,System.Threading.Tasks.TaskCompletionSource{``0},``0)">
            <summary>
            Upon completion of the task, copies its result into the given task completion source, regardless of the
            completion state. This causes the original task to be fully observed, and the task that is returned by
            this method will always successfully run to completion, regardless of the original task state.
            Since this method consumes a task with no return value, you must provide the return value to be used
            when the inner task ran to successful completion.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.CopyResultToCompletionSource``1(System.Threading.Tasks.Task{``0},System.Threading.Tasks.TaskCompletionSource{``0})">
            <summary>
            Upon completion of the task, copies its result into the given task completion source, regardless of the
            completion state. This causes the original task to be fully observed, and the task that is returned by
            this method will always successfully run to completion, regardless of the original task state.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.CastToObject(System.Threading.Tasks.Task)">
            <summary>
            Cast Task to Task of object
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.CastToObject``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Cast Task of T to Task of object
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.CastFromObject``1(System.Threading.Tasks.Task{System.Object})">
            <summary>
            Cast Task of object to Task of T
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.FastUnwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
            <summary>
            A version of task.Unwrap that is optimized to prevent unnecessarily capturing the
            execution context when the antecedent task is already completed.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.FastUnwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
            <summary>
            A version of task.Unwrap that is optimized to prevent unnecessarily capturing the
            execution context when the antecedent task is already completed.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Finally(System.Threading.Tasks.Task,System.Action,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, regardless of the state
            the task ended in. Intended to roughly emulate C# 5's support for "finally" in async methods.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Finally``1(System.Threading.Tasks.Task{``0},System.Action,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, regardless of the state
            the task ended in. Intended to roughly emulate C# 5's support for "finally" in async methods.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.MarkExceptionsObserved(System.Threading.Tasks.Task)">
            <summary>
            Marks a Task as "exception observed". The Task is required to have been completed first.
            </summary>
            <remarks>
            Useful for 'finally' clauses, as if the 'finally' action throws we'll propagate the new
            exception and lose track of the inner exception.
            </remarks>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then(System.Threading.Tasks.Task,System.Action,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault).
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then``1(System.Threading.Tasks.Task,System.Func{``0},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault).
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault).
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault).
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then``1(System.Threading.Tasks.Task{``0},System.Action{``0},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault). The continuation is provided with the
            result of the task as its sole parameter.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then``2(System.Threading.Tasks.Task{``0},System.Func{``0,``1},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault). The continuation is provided with the
            result of the task as its sole parameter.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then``1(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault). The continuation is provided with the
            result of the task as its sole parameter.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.Then``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Calls the given continuation, after the given task has completed, if the task successfully ran
            to completion (i.e., was not cancelled and did not fault). The continuation is provided with the
            result of the task as its sole parameter.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.ThrowIfFaulted(System.Threading.Tasks.Task)">
            <summary>
            Throws the first faulting exception for a task which is faulted. It attempts to preserve the original
            stack trace when throwing the exception (which should always work in 4.5, and should also work in 4.0
            when running in full trust). Note: It is the caller's responsibility not to pass incomplete tasks to
            this method, because it does degenerate into a call to the equivalent of .Wait() on the task when it
            hasn't yet completed.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.ToAsyncVoidTask(System.Action)">
            <summary>
            Adapts any action into a Task (returning AsyncVoid, so that it's usable with Task{T} extension methods).
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.ToTask``1(System.Threading.Tasks.Task,System.Threading.CancellationToken,``0)">
            <summary>
            Changes the return value of a task to the given result, if the task ends in the RanToCompletion state.
            This potentially imposes an extra ContinueWith to convert a non-completed task, so use this with caution.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskHelpersExtensions.TryGetResult``1(System.Threading.Tasks.Task{``0},``0@)">
            <summary>
            Attempts to get the result value for the given task. If the task ran to completion, then
            it will return true and set the result value; otherwise, it will return false.
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.TaskHelpersExtensions.AsyncVoid">
            <summary>
            Used as the T in a "conversion" of a Task into a Task{T}
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfoBase`1.Throw">
            <summary>
            Returns a CatchResult that re-throws the original exception.
            </summary>
        </member>
        <member name="P:System.Threading.Tasks.CatchInfoBase`1.Exception">
            <summary>
            The exception that was thrown to cause the Catch block to execute.
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.CatchInfoBase`1.CatchResult">
            <summary>
            Represents a result to be returned from a Catch handler.
            </summary>
        </member>
        <member name="P:System.Threading.Tasks.CatchInfoBase`1.CatchResult.Task">
            <summary>
            Gets or sets the task to be returned to the caller.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfo.Handled">
            <summary>
            Returns a CatchResult that returns a completed (non-faulted) task.
            </summary>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfo.Task(System.Threading.Tasks.Task)">
            <summary>
            Returns a CatchResult that executes the given task and returns it, in whatever state it finishes.
            </summary>
            <param name="task">The task to return.</param>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfo.Throw(System.Exception)">
            <summary>
            Returns a CatchResult that throws the given exception.
            </summary>
            <param name="ex">The exception to throw.</param>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfo`1.Handled(`0)">
            <summary>
            Returns a CatchResult that returns a completed (non-faulted) task.
            </summary>
            <param name="returnValue">The return value of the task.</param>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfo`1.Task(System.Threading.Tasks.Task{`0})">
            <summary>
            Returns a CatchResult that executes the given task and returns it, in whatever state it finishes.
            </summary>
            <param name="task">The task to return.</param>
        </member>
        <member name="M:System.Threading.Tasks.CatchInfo`1.Throw(System.Exception)">
            <summary>
            Returns a CatchResult that throws the given exception.
            </summary>
            <param name="ex">The exception to throw.</param>
        </member>
        <member name="T:System.Web.Http.Error">
            <summary>
            Utility class for creating and unwrapping <see cref="T:System.Exception"/> instances.
            </summary>
        </member>
        <member name="M:System.Web.Http.Error.Format(System.String,System.Object[])">
            <summary>
            Formats the specified resource string using <see cref="M:CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:System.Web.Http.Error.Argument(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.Argument(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentUriNotHttpOrHttpsScheme(System.String,System.Uri)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a message saying that the argument must be an "http" or "https" URI.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentUriNotAbsolute(System.String,System.Uri)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a message saying that the argument must be an absolute URI.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentUriHasQueryOrFragment(System.String,System.Uri)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a message saying that the argument must be an absolute URI 
            without a query or fragment identifier and then logs it with <see cref="F:TraceLevel.Error"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.PropertyNull">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentNull(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentNull(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentNullOrEmpty(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a default message.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentOutOfRange(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentMustBeGreaterThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="minValue">The minimum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ArgumentMustBeLessThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="maxValue">The maximum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.KeyNotFound">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.KeyNotFound(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.ObjectDisposed(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ObjectDisposedException"/> initialized according to guidelines.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.OperationCanceled">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.OperationCanceled(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.InvalidEnumArgument(System.String,System.Int32,System.Type)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> for an invalid enum argument.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="invalidValue">The value of the argument that failed.</param>
            <param name="enumClass">A <see cref="T:System.Type"/> that represents the enumeration class with the valid values.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.InvalidOperation(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.InvalidOperation(System.Exception,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:System.Web.Http.Error.NotSupported(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection"/> class.
            </summary>
        </member>
        <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection"/>.
            </summary>
            <param name="collection">The collection to which to add the items.</param>
            <param name="items">
            The items that should be added to the end of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection"/>.
            The items collection itself cannot be <see langword="null"/>, but it can contain elements that are
            <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Inserts the elements of a collection into the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection"/> at the specified
            index.
            </summary>
            <param name="collection"></param>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="items">
            The items that should be inserted into the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection"/>. The items collection
            itself cannot be <see langword="null"/>, but it can contain elements that are <see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
            <summary>
            Provides a convenient starting point for a controller that exposes an OData entity set. This is the asynchronous version of <see cref="T:System.Web.Http.OData.EntitySetController`2"/>.
            </summary>
            <typeparam name="TEntity">The type associated with the exposed entity set's entity type.</typeparam>
            <typeparam name="TKey">The type associated with the entity key of the exposed entity set's entity type.</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.ODataController">
            <summary>
            Defines a base class for OData controllers that support writing and reading data using the OData formats.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
            <summary>
            This method should be overridden to handle GET requests that attempt to retrieve entities from the entity set. This method should asynchronously compute the
            matching entities by applying the request's query options.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the matching entities from the entity set when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
            <summary>
            Handles GET requests that attempt to retrieve an individual entity by key from the entity set.
            </summary>
            <param name="key">The entity key of the entity to retrieve.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the response message to send back to the client when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
            <summary>
            Handles POST requests that create new entities in the entity set.
            </summary>
            <param name="entity">The entity to insert into the entity set.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the response message to send back to the client when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
            <summary>
            Handles PUT requests that attempt to replace a single entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to replace.</param>
            <param name="update">The updated entity.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the response message to send back to the client when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
            <summary>
            Handles PATCH and MERGE requests to partially update a single entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to update.</param>
            <param name="patch">The patch representing the partial update.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the response message to send back to the client when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
            <summary>
            This method should be overridden to handles DELETE requests for deleting existing entities from the entity set.
            </summary>
            <param name="key">The entity key of the entity to delete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the entity has been successfully deleted.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
            <summary>
            This method should be overridden to handle POST and PUT requests that attempt to create a link between two entities.
            </summary>
            <param name="key">The key of the entity with the navigation property.</param>
            <param name="navigationProperty">The name of the navigation property.</param>
            <param name="link">The URI of the entity to link.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the link has been successfully created.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
            <summary>
            This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.
            </summary>
            <param name="key">The key of the entity with the navigation property.</param>
            <param name="navigationProperty">The name of the navigation property.</param>
            <param name="link">The URI of the entity to remove from the navigation property.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the link has been successfully deleted.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
            <summary>
            This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.
            </summary>
            <param name="key">The key of the entity with the navigation property.</param>
            <param name="relatedKey">The key of the related entity.</param>
            <param name="navigationProperty">The name of the navigation property.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the link has been successfully deleted.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
            <summary>
            This method should be overridden to handle all unmapped OData requests.
            </summary>
            <param name="odataPath">The OData path of the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the response message to send back to the client when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
            <summary>
            This method should be overridden to get the entity key of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The entity key value</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
            <summary>
            This method should be overridden to retrieve an entity by key from the entity set.
            </summary>
            <param name="key">The entity key of the entity to retrieve.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the retrieved entity when it completes, or <c>null</c> if an entity with the specified entity key cannot be found in the entity set.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
            <summary>
            This method should be overridden to create a new entity in the entity set.
            </summary>
            <param name="entity">The entity to add to the entity set.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the created entity when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
            <summary>
            This method should be overridden to update an existing entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to update.</param>
            <param name="update">The updated entity.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the updated entity when it completes.</returns>
        </member>
        <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
            <summary>
            This method should be overridden to apply a partial update to an existing entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to update.</param>
            <param name="patch">The patch representing the partial update.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that contains the updated entity when it completes.</returns>
        </member>
        <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
            <summary>
            Gets the OData path of the current request.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
            <summary>
            Gets the OData query options of the current request.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
            <summary>
            An attribute to be placed on controllers that registers the OData formatters.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            Callback invoked to set per-controller overrides for this controllerDescriptor.
            </summary>
            <param name="controllerSettings">The controller settings to initialize.</param>
            <param name="controllerDescriptor">The controller descriptor. Note that the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> can be associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> is inherited.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
            <summary>
            Encapsulates a self link factory and whether the link factory follows conventions or not.
            </summary>
            <typeparam name="T">The type of the self link generated. This should be <see cref="T:System.String"/> for ID links and <see cref="T:System.Uri"/> for read and edit links.</typeparam>
        </member>
        <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1"/>.
            </summary>
            <param name="linkFactory">The link factory.</param>
            <param name="followsConventions">Whether the factory follows odata conventions for link generation.</param>
        </member>
        <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
            <summary>
            Gets the factory for generating links.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
            <summary>
            Gets a boolean indicating whether the link factory follows OData conventions or not.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.EntitySetControllerHelpers">
            <summary>
            Helper class for <see cref="T:System.Web.Http.OData.EntitySetController`2"/> and <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2"/> that contains shared logic.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetControllerHelpers.RequestPrefersReturnContent(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns whether or not the request prefers content to be returned.
            </summary>
            <returns><c>true</c> if the request has a Prefer header value for "return-content", <c>false</c> otherwise</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetControllerHelpers.RequestPrefersReturnNoContent(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns whether or not the request prefers no content to be returned.
            </summary>
            <returns><c>true</c> if the request has a Prefer header value for "return-no-content", <c>false</c> otherwise</returns>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataMetadataLevel">
            <summary>
            The amount of metadata information to serialize in an OData response (for JSON light).
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.Default">
            <summary>
            Normal metadata; used for anything other than JSON light (Atom/XML, JSON verbose)
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.FullMetadata">
            <summary>
            JSON light full metadata
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.MinimalMetadata">
            <summary>
            JSON light minimal metadata
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.NoMetadata">
            <summary>
            JSON light no metadata
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.FromODataUriAttribute">
            <summary>
            An implementation of <see cref="T:System.Web.Http.ParameterBindingAttribute"/> that can bind URI parameters using OData conventions.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            Gets the binding for a parameter.
            </summary>
            <param name="parameter">The parameter to bind.</param>
            <returns>
            The <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />that contains the binding.
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.ODataRouteConstants">
            <summary>
            This class contains route constants for OData.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.RouteName">
            <summary>
            Route name for the OData route
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.ODataPath">
            <summary>
            Route variable name for the OData path.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.ODataPathTemplate">
            <summary>
            Wildcard route template for the OData path route variable.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.ConstraintName">
            <summary>
            Parameter name to use for the OData path route constraint.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.Action">
            <summary>
            Route data key for the action name.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.Controller">
            <summary>
            Route data key for the controller name.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.Key">
            <summary>
            Route data key for entity keys.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.RelatedKey">
            <summary>
            Route data key for the related key when deleting links.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.ODataRouteConstants.NavigationProperty">
            <summary>
            Route data key for the navigation property name when manipulating links.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.EntitySetController`2">
            <summary>
            Provides a convenient starting point for a controller that exposes an OData entity set. This is the synchronous version of <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2"/>.
            </summary>
            <typeparam name="TEntity">The type associated with the exposed entity set's entity type.</typeparam>
            <typeparam name="TKey">The type associated with the entity key of the exposed entity set's entity type.</typeparam>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
            <summary>
            This method should be overridden to handle GET requests that attempt to retrieve entities from the entity set.
            </summary>
            <returns>The matching entities from the entity set.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
            <summary>
            Handles GET requests that attempt to retrieve an individual entity by key from the entity set.
            </summary>
            <param name="key">The entity key of the entity to retrieve.</param>
            <returns>The response message to send back to the client.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
            <summary>
            Handles POST requests that create new entities in the entity set.
            </summary>
            <param name="entity">The entity to insert into the entity set.</param>
            <returns>The response message to send back to the client.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
            <summary>
            Handles PUT requests that attempt to replace a single entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to replace.</param>
            <param name="update">The updated entity.</param>
            <returns>The response message to send back to the client.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
            <summary>
            Handles PATCH and MERGE requests to partially update a single entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to update.</param>
            <param name="patch">The patch representing the partial update.</param>
            <returns>The response message to send back to the client.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
            <summary>
            This method should be overriden to handle DELETE requests for deleting existing entities from the entity set.
            </summary>
            <param name="key">The entity key of the entity to delete.</param>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
            <summary>
            This method should be overridden to handle POST and PUT requests that attempt to create a link between two entities.
            </summary>
            <param name="key">The key of the entity with the navigation property.</param>
            <param name="navigationProperty">The name of the navigation property.</param>
            <param name="link">The URI of the entity to link.</param>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
            <summary>
            This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.
            </summary>
            <param name="key">The key of the entity with the navigation property.</param>
            <param name="navigationProperty">The name of the navigation property.</param>
            <param name="link">The URI of the entity to remove from the navigation property.</param>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
            <summary>
            This method should be overridden to handle DELETE requests that attempt to break a relationship between two entities.
            </summary>
            <param name="key">The key of the entity with the navigation property.</param>
            <param name="relatedKey">The key of the related entity.</param>
            <param name="navigationProperty">The name of the navigation property.</param>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
            <summary>
            This method should be overridden to handle all unmapped OData requests.
            </summary>
            <param name="odataPath">The OData path of the request.</param>
            <returns>The response message to send back to the client.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
            <summary>
            This method should be overridden to get the entity key of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The entity key value</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
            <summary>
            This method should be overridden to retrieve an entity by key from the entity set.
            </summary>
            <param name="key">The entity key of the entity to retrieve.</param>
            <returns>The retrieved entity, or <c>null</c> if an entity with the specified entity key cannot be found in the entity set.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
            <summary>
            This method should be overridden to create a new entity in the entity set.
            </summary>
            <param name="entity">The entity to add to the entity set.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
            <summary>
            This method should be overridden to update an existing entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to update.</param>
            <param name="update">The updated entity.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
            <summary>
            This method should be overridden to apply a partial update to an existing entity in the entity set.
            </summary>
            <param name="key">The entity key of the entity to update.</param>
            <param name="patch">The patch representing the partial update.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
            <summary>
            Gets the OData path of the current request.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
            <summary>
            Gets the OData query options of the current request.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.NonValidatingParameterBindingAttribute">
            <summary>
            An attribute to disable WebApi model validation for a particular type.
            </summary>
        </member>
        <member name="T:System.Web.Http.ODataHttpErrorExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Web.Http.HttpError"/> class.
            </summary>
        </member>
        <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
            <summary>
            Converts the <paramref name="httpError"/> to an <see cref="T:Microsoft.Data.OData.ODataError"/>.
            </summary>
            <param name="httpError">The <see cref="T:System.Web.Http.HttpError"/> instance to convert.</param>
            <returns>The converted <see cref="T:Microsoft.Data.OData.ODataError"/></returns>
        </member>
        <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
            <summary>
            Helper method that performs content negotiation and creates a <see cref="T:System.Net.Http.HttpResponseMessage"/> representing an error 
            with an instance of <see cref="T:System.Net.Http.ObjectContent`1"/> wrapping <paramref name="oDataError"/> as the content. If no formatter 
            is found, this method returns a response with status 406 NotAcceptable.
            </summary>
            <remarks>
            This method requires that <paramref name="request"/> has been associated with an instance of
            <see cref="T:System.Web.Http.HttpConfiguration"/>.
            </remarks>
            <param name="request">The request.</param>
            <param name="statusCode">The status code of the created response.</param>
            <param name="oDataError">The OData error to wrap.</param>
            <returns>An error response wrapping <paramref name="oDataError"/> with status code <paramref name="statusCode"/>.</returns>
        </member>
        <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the OData path of the request.
            </summary>
            <param name="request">The request.</param>
            <returns>The OData path of the request</returns>
        </member>
        <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)">
            <summary>
            Sets the OData path for the request.
            </summary>
            <param name="request">The request.</param>
            <param name="odataPath">The OData path of the request.</param>
        </member>
        <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the inline count to use in the OData response.
            </summary>
            <param name="request">The request.</param>
            <returns>The inline count to send back, or <c>null</c> if one isn't set.</returns>
        </member>
        <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the next page link to use in the OData response.
            </summary>
            <param name="request">The request.</param>
            <returns>The next page link to send back, or <c>null</c> if one isn't set.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
            <summary>
            ActionLinkBuilder can be used to annotate an Action. 
            This is how formatters create links to invoke bound actions.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri})">
            <summary>
            Create a new ActionLinkBuilder based on an actionLinkFactory.
            <remarks>
            If the action is not available the actionLinkFactory delegate should return NULL.
            </remarks>
            </summary>
            <param name="actionLinkFactory">The actionLinkFactory this ActionLinkBuilder should use when building links.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
            <summary>
            Creates an action link factory that builds an action link, but only when appropriate based on the expensiveAvailabilityCheck, and whether expensive checks should be made,
            which is deduced by looking at the EntityInstanceContext.SkipExpensiveActionAvailabilityChecks property.
            </summary>
            <param name="baseFactory">The action link factory that actually builds links if all checks pass.</param>
            <param name="expensiveAvailabilityCheck">The availability check function that is expensive but when called returns whether the action is available.</param>
            <returns>The new action link factory.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Builder.BindableProcedureFinder">
            <summary>
            This class builds a cache that allows for efficient look up of bindable procedure by EntityType. 
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.BindableProcedureFinder.#ctor(Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Constructs a concurrent cache for looking up bindable procedures for any EntityType in the provided model.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.ActionLinkGenerationConvention">
            <summary>
            The ActionLinkGenerationConvention calls action.HasActionLink(..) for all actions that bind to a single entity if they have not previously been configured.
            The convention uses the <see cref="T:System.Web.Http.OData.ODataRouteConstants"/>.InvokeBoundAction route to build a link that invokes the action.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.IProcedureConvention">
            <summary>
            Convention to apply to <see cref="T:System.Web.Http.OData.Builder.ProcedureConfiguration"/> instances in the model
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.AssociationSetDiscoveryConvention">
            <summary>
            <see cref="T:System.Web.Http.OData.Builder.Conventions.IEntitySetConvention"/> to configure the EDM association sets for the given entity set.
            <remarks>This convention adds an association set for each EDM navigation property defined in this type, its base types and all its derived types.
            The target entity set chosen is the default entity set for the navigation property's target entity type.
            The default entity set for an entity type is the entity set that contains entries of that entity type. If more than one entity sets match, the default entity set is none.
            If no entity sets match the default entity set is the default entity set of the base type.</remarks>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.DataMemberAttributeEdmPropertyConvention">
            <summary>
            Configures properties that have <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> as optional or required on their edm type.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1">
            <summary>
            Base class for all attribute based <see cref="T:System.Web.Http.OData.Builder.Conventions.IEdmPropertyConvention"/>'s.
            </summary>
            <typeparam name="TPropertyConfiguration">The type of the property this configuration applies to.</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeConvention">
            <summary>
            Base class for all attribute based conventions.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeConvention.GetAttributes(System.Reflection.MemberInfo)">
            <summary>
            Returns the attributes on <paramref name="member"/> that this convention applies to.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeConvention.AttributeFilter">
            <summary>
            Gets the filter that finds the attributes that this convention applies to.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeConvention.AllowMultiple">
            <summary>
            Gets whether this convention allows multiple instances of the attribute.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.IEdmPropertyConvention`1">
            <summary>
            Convention to process properties of <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/>.
            </summary>
            <typeparam name="TPropertyConfiguration"></typeparam>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.IEdmPropertyConvention">
            <summary>
            Convention to process properties of <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.IEdmPropertyConvention.Apply(System.Web.Http.OData.Builder.PropertyConfiguration,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property the convention is applied on.</param>
            <param name="structuralTypeConfiguration">The <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/> the edmProperty belongs to.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.IEdmPropertyConvention`1.Apply(`0,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property the convention is applied on.</param>
            <param name="structuralTypeConfiguration">The <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/> the edmProperty belongs to.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.Apply(System.Web.Http.OData.Builder.PropertyConfiguration,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property being configured.</param>
            <param name="structuralTypeConfiguration">The type being configured.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.Apply(`0,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property being configured.</param>
            <param name="structuralTypeConfiguration">The type being configured.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.Apply(`0,System.Web.Http.OData.Builder.StructuralTypeConfiguration,System.Attribute)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property being configured.</param>
            <param name="structuralTypeConfiguration">The type being configured.</param>
            <param name="attribute">The attribute to be used during configuration.</param>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
            <summary>
            <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> classes to handle OData.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create(Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Creates a set of media type formatters to handle OData.
            </summary>
            <param name="model">The data model the formatter will support.</param>
            <returns>A set of media type formatters to handle OData.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypes">
            <summary>
            Contains media types used by the OData formatter.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.InlineCountValue">
            <summary>
            Defines an enumeration for $inlinecount query option values.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
            <summary>
            Corresponds to the 'none' $inlinecount query option value.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
            <summary>
            Corresponds to the 'allpages' $inlinecount query option value.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
            <summary>
            Represents the value of the $inlinecount query option and exposes a way to retrieve the number of entities that satisfy a query.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption"/> class.
            </summary>
            <param name="rawValue">The raw value for the $inlinecount query option.</param>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
            <summary>
            Gets the number of entities that satify the given query if the response should include an inline count, or <c>null</c> otherwise.
            </summary>
            <param name="query">The query to compute the count for.</param>
            <returns>The number of entities that satisfy the specified query if the response should include an inline count, or <c>null</c> otherwise.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
            <summary>
            Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>        
        </member>
        <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
            <summary>
            Gets the raw $inlinecount value.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
            <summary>
            Gets the value of the $inlinecount in a parsed form.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
            <summary>
            Define a validator class used to validate a FilterQueryOption based on the settings
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            The entry point of this validator class. Use this method to validate the FilterQueryOption
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'all' query inside the filter query
            </summary>
            <param name="allNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'any' query inside the filter query
            </summary>
            <param name="anyNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            override this method to restrict the binary operators inside the filter query. That includes all the logical operators except 'not' and all math operators.
            </summary>
            <param name="binaryOperatorNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to validate the LogicalOperators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or'.
            
            Please note that 'not' is not included here. Please override ValidateUnaryOperatorNode to customize 'not'.
            </summary>
            <param name="binaryNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method for the Arithmetic operators, including add, sub, mul, div, mod
            </summary>
            <param name="binaryNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'constant' inside the filter query.
            </summary>
            <param name="constantNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'cast' inside the filter query.
            </summary>
            <param name="convertNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method for the navigation property node
            </summary>
            <param name="sourceNode"></param>
            <param name="navigationProperty"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to validate the parameter used in the filter query
            </summary>
            <param name="rangeVariable"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to validate property accessor
            </summary>
            <param name="propertyAccessNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to validate collection property accessor
            </summary>
            <param name="propertyAccessNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to validate Function calls, such as 'length', 'years', etc.
            </summary>
            <param name="node"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method to validate the Not operator
            </summary>
            <param name="unaryOperatorNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method if you want to visit each query node. 
            </summary>
            <param name="node"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method if you want to validate casts on entity collections.
            </summary>
            <param name="entityCollectionCastNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Override this method if you want to validate casts on single entities.
            </summary>
            <param name="singleEntityCastNode"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueNode(Microsoft.Data.OData.Query.SemanticAst.SingleValueNode,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            The recursive method that validate most of the query node type is of SingleValueNode type.
            </summary>
            <param name="node"></param>
            <param name="settings"></param>
        </member>
        <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
            <summary>
            Validate if the given ODataQueryOption follows what is in the AllowedQueryOptions. By default, 
            we allow all four operators.
            </summary>
            <param name="options"></param>
            <param name="validationSettings"></param>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
            <summary>
            Gets/Sets a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
             <summary>
             Returns a list of allowed functions as follows.
             
             Against edm.string (11)
              substringof, endswith, startswith, length, indexof, replace, substring, tolower, toupper, trim, concat
            
             e.g. ~/Customers?$filter=length(CompanyName) eq 19
            
             Against edm.DateTime/DateTimeOffset (12)
              year, years, month, months, day, days, hour, hours, minute, minutes, second, seconds
            
             e.g. ~/Employees?$filter=year(BirthDate) eq 1971
            
             Math related (3) 
              round, floor, ceiling
            
             Against Type (2)
              isof, cast, 
            
             Against Collection (2)
              any, all
              
             </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
            <summary>
            Returns a list of allowed logical Operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
            <summary>
            Returns a list of properties one can orderby the result with. Note, by default if the list is empty, 
            it actually means it can be ordered by any properties.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
            <summary>
            Returns the query parameters that you allowed, the default is all four query options, including $filter, $skip, $top, $orderby
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
            <summary>
            Gets/Sets the max skip value that client can request
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
            <summary>
            Gets/Sets the max top value that client can request 
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing an action invocation.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
            <summary>
            Provides an object representation for an OData path segment with additional information about the EDM type and entity set for the path.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> class.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>The EDM type for this segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>The entity set for this segment.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment"/> class.
            </summary>
            <param name="action">The action being invoked.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment"/> class.
            </summary>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
            <summary>
            Gets the action being invoked.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a cast.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.CastPathSegment"/> class.
            </summary>
            <param name="castType">The type of the cast.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.CastPathSegment"/> class.
            </summary>
            <param name="castTypeName">Name of the cast type.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
            <summary>
            Gets the type of the cast.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
            <summary>
            Gets the name of the cast type.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a $batch segment.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that handles action invocations.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that handles entity sets.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
            <summary>
            Provides an abstraction for selecting a controller and an action for OData requests.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
            <summary>
            Selects the controller for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="request">The request.</param>
            <returns><c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected controller</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns><c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected action</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
            <summary>
            Selects the controller for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="request">The request.</param>
            <returns>
              <c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected controller
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns>
              <c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected action
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns>
              <c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected action
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that handles link manipulations.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action.
            </summary>
            <param name="odataPath">The odata path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that handles navigation properties.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action.
            </summary>
            <param name="odataPath">The odata path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that always selects the action named HandleUnmappedRequest if that action is present.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action.
            </summary>
            <param name="odataPath">The odata path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that handles OData metadata requests.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
            <summary>
            Selects the controller for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="request">The request.</param>
            <returns>
              <c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected controller
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns>
              <c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected action
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
            <summary>
            An implementation of <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention"/> that handles operating on entities by key.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
            <summary>
            Selects the action for OData requests.
            </summary>
            <param name="odataPath">The OData path.</param>
            <param name="controllerContext">The controller context.</param>
            <param name="actionMap">The action map.</param>
            <returns>
              <c>null</c> if the request isn't handled by this convention; otherwise, the name of the selected action
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
            <summary>
            An implementation of <see cref="T:System.Web.Http.Controllers.IHttpActionSelector"/> that uses the server's OData routing conventions to select an action for OData requests.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention},System.Web.Http.Controllers.IHttpActionSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector"/> class.
            </summary>
            <param name="routingConventions">The OData routing conventions to use for OData requests.</param>
            <param name="innerSelector">The inner controller selector to call.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            Returns a map, keyed by action string, of all <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor"/> that the selector can select.  This is primarily called by <see cref="T:System.Web.Http.Description.IApiExplorer"/> to discover all the possible actions in the controller.
            </summary>
            <param name="controllerDescriptor">The controller descriptor.</param>
            <returns>
            A map of <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor"/> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor"/>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Selects an action for the <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector"/>.
            </summary>
            <param name="controllerContext">The controller context.</param>
            <returns>
            The selected action.
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataControllerSelector">
            <summary>
            An implementation of <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector"/> that uses the server's OData routing conventions to select a controller for OData requests.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataControllerSelector.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention},System.Web.Http.Dispatcher.IHttpControllerSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataControllerSelector"/> class.
            </summary>
            <param name="routingConventions">The OData routing conventions to use for OData requests.</param>
            <param name="innerSelector">The inner controller selector to call.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataControllerSelector.GetControllerMapping">
            <summary>
            Returns a map, keyed by controller string, of all <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> that the selector can select.  This is primarily called by <see cref="T:System.Web.Http.Description.IApiExplorer" /> to discover all the possible controllers in the system.
            </summary>
            <returns>
            A map of all <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
            <summary>
            Selects a <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> for the given <see cref="T:System.Net.Http.HttpRequestMessage" />.
            </summary>
            <param name="request">The HTTP request message.</param>
            <returns>
            The <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> instance for the given <see cref="T:System.Net.Http.HttpRequestMessage" />.
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
            <summary>
            Exposes the ability to parse an OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> and convert an <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> into an OData link.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(System.String)">
            <summary>
            Parses the specified OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> that contains additional information about the EDM type and entity set for the path.
            </summary>
            <param name="odataPath">The OData path to parse.</param>
            <returns>A parsed representation of the URI, or <c>null</c> if the URI does not match the model.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
            <summary>
            Converts an instance of <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> into an OData link.
            </summary>
            <param name="path">The OData path to convert into a link.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataPath">
            <summary>
            Provides an object representation for an OData path with additional information about the EDM type and entity set for the path.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
            <summary>
            Gets or sets the EDM type of the path.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
            <summary>
            Gets or sets the entity set of the path.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
            <summary>
            Gets the path template describing the types of segments in the path.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
            <summary>
            Gets the path segments for the OData path.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
            <summary>
            An implementation of <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint"/> that only matches OData paths.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint"/> class.
            </summary>
            <param name="pathHandler">The OData path handler to use for parsing.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            Determines whether this instance equals a specified route.
            </summary>
            <param name="request">The request.</param>
            <param name="route">The route to compare.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="values">A list of parameter values.</param>
            <param name="routeDirection">The route direction.</param>
            <returns>
            True if this instance equals a specified route; otherwise, false.
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
            <summary>
            Implementation of <see cref="T:System.Web.Http.ParameterBindingAttribute"/> used to bind an instance of <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> as an action parameter.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            Gets the parameter binding.
            </summary>
            <param name="parameter">The parameter description.</param>
            <returns>
            The parameter binding.
            </returns>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
            <summary>
            Provides the values of segment kinds for implementations of <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/>.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing an indexing into an entity collection by key.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment"/> class.
            </summary>
            <param name="value">The key value to use for indexing into the collection.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
            <summary>
            Gets the key value to use for indexing into the collection.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a $links segment.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a segment that could not be resolved.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment"/> class.
            </summary>
            <param name="segmentValue">The unresolved segment value.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
            <summary>
            Gets the unresolved segment value.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a $value segment.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a property access.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment"/> class.
            </summary>
            <param name="property">The property being accessed by this segment.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
            <summary>
            Gets the property property being accessed by this segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a navigation.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment"/> class.
            </summary>
            <param name="navigationProperty">The navigation property being accessed by this segment.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment"/> class.
            </summary>
            <param name="navigationPropertyName">Name of the navigation property.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
            <summary>
            Gets the navigation property being accessed by this segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
            <summary>
            Gets the name of the navigation property.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing an entity set.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment"/> class.
            </summary>
            <param name="entitySet">The entity set being accessed.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment"/> class.
            </summary>
            <param name="entitySetName">Name of the entity set.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
            <summary>
            Gets the entity set represented by this segment.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
            <summary>
            Gets the name of the entity set.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
            <summary>
            An <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment"/> implementation representing a $metadata segment.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Gets the entity set for this segment.
            </summary>
            <param name="previousEntitySet">The entity set of the previous path segment.</param>
            <returns>
            The entity set for this segment.
            </returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.ODataActionParameters">
            <summary>
            ActionPayload holds the Parameter names and values provided by a client in a POST request
            to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
            <summary>
            ActionConfiguration represents an OData action that you wish to expose via your service
            <remarks>
            ActionConfigurations are exposed via $metadata as a <FunctionImport/> element.
            </remarks> 
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
            <summary>
            Represents a Procedure that is exposed in the model
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
            <summary>
            The Name of the procedure
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
            <summary>
            The parameters the procedure takes
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
            <summary>
            The type returned when the procedure is invoked.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
            <summary>
            The EntitySet that entities are returned from.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
            <summary>
            The Kind of procedure, which can be either Action, Function or ServiceOperation
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
            <summary>
            The qualified name of the procedure when used in OData urls.
            Qualification is required to distinguish the procedure from other possible single part identifiers.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
            <summary>
            The FullyQualifiedName is the ContainerQualifiedName further qualified using the Namespace.
            Typically this is not required, because most services have at most one container with the same name.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
            <summary>
            The FullName is the ContainerQualifiedName.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
            <summary>
            Can the procedure be composed upon.
            
            For example can a URL that invokes the procedure be used as the base url for 
            a request that invokes the procedure and does something else with the results
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
            <summary>
            Can the procedure be bound to a url representing the BindingParameter.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
            <summary>
            If the procedure IsBindable is it Always bindable.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
            <summary>
            Does the procedure have side-effects.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.String)">
            <summary>
            Create a new ActionConfiguration
            </summary>
            <param name="builder">The ODataModelBuilder to which this ActionConfiguration should be added.</param>
            <param name="name">The name of this ActionConfiguration.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The entitySetName which contains the return EntityType instance</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The entitySetName which contains the returned EntityType instances</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
            <summary>
            Established the return type of the Action.
            <remarks>Used when the return type is a single Primitive or ComplexType.</remarks>
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
            <summary>
            Establishes the return type of the Action
            <remarks>Used when the return type is a collection of either Primitive or ComplexTypes.</remarks>
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
            <summary>
            Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the Action "isBindable".
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Adds a new non-binding parameter.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
            <summary>
            Adds a new non-binding parameter
            </summary>  
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
            <summary>
            Adds a new non-binding collection parameter
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri})">
            <summary>
            Register a factory that creates actions links.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
            <summary>
            Retrieves the currently registered action link factory.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
            <summary>
            Get the bindingParameter. 
            <remarks>Null means the Action has no bindingParameter.</remarks>
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
            <summary>
            Whether this action can always be bound.
            <example>
            For example imagine an Watch action that can be bound to a Movie, it might not always be possible to Watch a movie,
            in which case IsAlwaysBindable would return false.
            </example>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
            <summary>
            Represents a BindingParameter.
            <remarks>
            Actions/Functions can have at most one BindingParameter.
            This parameter has similar semantics to the 'this' keyword in C# extensions methods.
            <example>
            For example given a url that identifies a Movie, if there is an action that has a bindingParameter that is a Movie,
            you can bind the Action to the url.
            
            i.e. if ~/Movies(1) identifies a Movie, and there exists a Checkout action that has a Movie BindingParameter,
            you can invoke that Action at this url ~/Movies(1)/Checkout
            </example>
            The BindingParameter type must either be an EntityType or a Collection of EntityTypes.
            </remarks>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
            <summary>
            Represents a parameter to a Procedure
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
            <summary>
            The name of the parameter
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
            <summary>
            The type of the parameter
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
            <summary>
            Create a BindingParameterConfiguration
            </summary>
            <param name="name">The name of the Binding Parameter</param>
            <param name="parameterType">The type of the Binding Parameter</param>
            <param name="alwaysBindable">Whether the action can always be bound to instances of the binding parameter.</param>
        </member>
        <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
            <summary>
            Indicates whether the BindingParameter is always bindable or not.
            For example some actions are always available some are only available at certain times or in certain states.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
            <summary>
            CollectionPropertyConfiguration represents a CollectionProperty on either an EntityType or ComplexType.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
            <summary>
            Base class for all structural property configurations.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
            <summary>
            Base class for all property configurations.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
            <summary>
            Gets the mapping CLR <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
            <summary>
            Gets the CLR <see cref="T:System.Type"/> of the property.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Builder.PropertyKind"/> of the property.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Constructs a CollectionPropertyConfiguration using the <paramref name="property">property</paramref> provided.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
            <summary>
            Sets the CollectionProperty to optional (i.e. nullable).
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
            <summary>
            Sets the CollectionProperty to required (i.e. non-nullable).
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
            <summary>
            Returns the type of Elements in the Collection
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
            <summary>
            Represents a Collection of some named type.
            <example>
            Collection(Namespace.Customer) or Collection(Namespace.Address)
            </example>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
            <summary>
            Represents an EdmType
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
            <summary>
            The .NET type associated with the EdmType
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
            <summary>
            The fullname (including namespace) of the EdmType
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
            <summary>
            The namespace of the EdmType
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
            <summary>
            The name of the EdmType
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
            <summary>
            The kind of the EdmType.
            Examples include EntityType, ComplexType, PrimitiveType, CollectionType
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
            <summary>
            The ODataModelBuilder used to create this IEdmType
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
            <summary>
            Construct a collection that contains elements of the specified ElementType
            and that is represented in .NET using the specified clrType
            </summary>
            <param name="elementType">The EdmTypeConfiguration of the elements in the collection</param>
            <param name="clrType">The type of this collection when manifested in .NET</param>
        </member>
        <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
            <summary>
            The EdmTypeConfiguration of elements in this collection
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
            <summary>
            Allows configuration to be performed for a complex type in a model. A ComplexTypeConfiguration can be obtained by using the method <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1"/>.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
            <summary>
            Represents an <see cref="T:Microsoft.Data.Edm.IEdmStructuredType"/> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/>.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a primitive property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a complex property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a collection property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
            <summary>
            Removes the given property.
            </summary>
            <param name="propertyInfo">The property being removed.</param>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.EdmTypeKind"/> of this edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
            <summary>
            Gets the backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
            <summary>
            Gets the full name of this edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
            <summary>
            Gets the namespace of this edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
            <summary>
            Gets the name of this edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
            <summary>
            Gets the declared properties on this edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
            <summary>
            Gets the properties from the backing CLR type that are to be ignored on this edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
            <summary>
            The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration"/>.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration"/>.
            <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/> being used.</param>
            <param name="clrType">The backing CLR type for this entity type.</param>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.AbstractEntityTypeDiscoveryConvention">
            <summary>
            <see cref="T:System.Web.Http.OData.Builder.Conventions.EntityTypeConvention"/> to figure out if an entity is abstract or not.
            <remarks>This convention configures all entity types backed by an abstract clr type as abstract entities.</remarks>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.EntityTypeConvention">
            <summary>
            An <see cref="T:System.Web.Http.OData.Builder.Conventions.EntityTypeConvention"/> is used to configure an <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration"/> in the 
            <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.EntityTypeConvention.Apply(System.Web.Http.OData.Builder.EntityTypeConfiguration,System.Web.Http.OData.Builder.ODataModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="entity">The <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration"/> to apply the convention on.</param>
            <param name="model">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/> instance.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.NotMappedAttributeConvention">
            <summary>
            Ignores properties with the NotMappedAttribute from <see cref="T:Microsoft.Data.Edm.IEdmStructuredType"/>.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1">
            <summary>
            Base class for all <see cref="T:System.Web.Http.OData.Builder.Conventions.IEdmTypeConvention"/>'s based on a attribute on the type.
            </summary>
            <typeparam name="TEdmTypeConfiguration">The kind of Edm type that this convention must be applied to.</typeparam>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.Apply(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Web.Http.OData.Builder.ODataModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmTypeConfiguration">The edm type to apply the convention to.</param>
            <param name="model">The model that this edm type belongs to.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.Apply(`0,System.Web.Http.OData.Builder.ODataModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmTypeConfiguration">The edm type to apply the convention to.</param>
            <param name="model">The model that this edm type belongs to.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.Apply(`0,System.Web.Http.OData.Builder.ODataModelBuilder,System.Attribute)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmTypeConfiguration">The edm type to apply the convention to.</param>
            <param name="model">The model that this edm type belongs to.</param>
            <param name="attribute">The attribute found on this edm type.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.DataContractAttributeEdmTypeConvention">
            <summary>
            Configures classes that have the <see cref="T:System.Runtime.Serialization.DataContractAttribute"/> to follow DataContract serialization/deserialization rules.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.DataContractAttributeEdmTypeConvention.Apply(System.Web.Http.OData.Builder.StructuralTypeConfiguration,System.Web.Http.OData.Builder.ODataModelBuilder,System.Attribute)">
            <summary>
            Removes properties that do not have the <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> attribute from the edm type.
            </summary>
            <param name="edmTypeConfiguration">The edm type to configure.</param>
            <param name="model">The edm model that this type belongs to.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found on this type.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.IgnoreDataMemberAttributeEdmPropertyConvention">
            <summary>
            Removes properties that have <see cref="T:System.Runtime.Serialization.IgnoreDataMemberAttribute"/> from their edm type.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.IgnoreDataMemberAttributeEdmPropertyConvention.Apply(System.Web.Http.OData.Builder.PropertyConfiguration,System.Web.Http.OData.Builder.StructuralTypeConfiguration,System.Attribute)">
            <summary>
            Removes the property from the edm type.
            </summary>
            <param name="edmProperty">The property being removed.</param>
            <param name="structuralTypeConfiguration">The edm type from which the property is being removed.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found on this type.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.RequiredAttributeEdmPropertyConvention">
            <summary>
            Marks properties that have <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> as non-optional on their edm type.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.RequiredAttributeEdmPropertyConvention.Apply(System.Web.Http.OData.Builder.StructuralPropertyConfiguration,System.Web.Http.OData.Builder.StructuralTypeConfiguration,System.Attribute)">
            <summary>
            Marks the property non-optional on the edm type.
            </summary>
            <param name="edmProperty">The edm property.</param>
            <param name="structuralTypeConfiguration">The edm type being configured.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.Attributes.KeyAttributeEdmPropertyConvention">
            <summary>
            Configures properties that have the <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/> as keys in the <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.Attributes.KeyAttributeEdmPropertyConvention.Apply(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration,System.Web.Http.OData.Builder.StructuralTypeConfiguration,System.Attribute)">
            <summary>
            Configures the property as a key on the edm type.
            </summary>
            <param name="edmProperty">The key property.</param>
            <param name="structuralTypeConfiguration">The edm type being configured.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found on the property.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.EdmTypeBuilder">
            <summary>
            <see cref="T:System.Web.Http.OData.Builder.EdmTypeBuilder"/> builds <see cref="T:Microsoft.Data.Edm.IEdmType"/>'s from <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/>'s.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EdmTypeBuilder.GetTypes(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.StructuralTypeConfiguration})">
            <summary>
            Builds <see cref="T:Microsoft.Data.Edm.IEdmType"/>'s from <paramref name="configurations"/>
            </summary>
            <param name="configurations">A collection of <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/>'s</param>
            <returns>The built dictionary of <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration"/>'s indexed by their backing CLR type</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EdmTypeBuilder.GetTypeKind(System.Type)">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.EdmPrimitiveTypeKind"/> that maps to the <see cref="T:System.Type"/>
            </summary>
            <param name="clrType">The clr type</param>
            <returns>The corresponding Edm primitive kind.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
            <summary>
            EntityCollectionConfiguration represents a Collection of Entities.
            This class can be used to configure things that get bound to entities, like Actions bound to a collection.
            </summary>
            <typeparam name="TEntityType">The EntityType that is the ElementType of the EntityCollection</typeparam>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
            <summary>
            Creates a new Action that binds to Collection(EntityType).
            </summary>
            <param name="name">The name of the Action</param>
            <returns>An ActionConfiguration to allow further configuration of the Action.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
            <summary>
            Creates a new Action that sometimes binds to Collection(EntityType).
            </summary>
            <param name="name">The name of the Action</param>
            <returns>An ActionConfiguration to allow further configuration of the Action.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
            <summary>
            Allows configuration to be performed for a entity set in a model.
            A <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration"/> can be obtained by using the method <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration"/>.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration"/>.
            <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityType">The CLR <see cref="T:System.Type"/> of the entity type contained in this entity set.</param>
            <param name="name">The name of the entity set.</param>
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration"/>.
            </summary>
            <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityType">The entity type contained in this entity set.</param>
            <param name="name">The name of the entity set.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
            <summary>
            Configures the entity set URL.
            </summary>
            <param name="url">The entity set URL.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
            <summary>
            Adds a self link to the feed.
            </summary>
            <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
            <returns>The entity set configuration currently being configured.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the edit link for the entities from this entity set.
            </summary>
            <param name="editLinkBuilder">The builder used to generate the edit link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the read link for the entities from this entity set.
            </summary>
            <param name="readLinkBuilder">The builder used to generate the read link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})">
            <summary>
            Configures the ID for the entities from this entity set.
            </summary>
            <param name="idLinkBuilder">The builder used to generate the ID.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Configures the navigation link for the given navigation property for entities from this entity set.
            </summary>
            <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
            <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Configures the navigation link for the given navigation properties for entities from this entity set.
            </summary>
            <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
            <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
            <summary>
            Binds the given navigation property to the target entity set.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <param name="targetEntitySet">The target entity set.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding"/> so that it can be further configured.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Removes the binding for the given navigation property.
            </summary>
            <param name="navigationConfiguration">The navigation property</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Finds the binding for the given navigation property and tries to create it if it doesnot exist.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding"/> so that it can be further configured.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
            <summary>
            Finds the binding for the given navigation property.
            </summary>
            <param name="autoCreate">Tells whether the binding should be auto created if it does not exist.</param>
            <param name="navigationConfiguration">The navigation property.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding"/> so that it can be further configured.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
            <summary>
            Gets the builder used to generate self links for feeds for this entity set.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
            <summary>
            Gets the builder used to generate edit links for entries from this entity set.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
            <summary>
            Gets the builder used to generate read links for entries from this entity set.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
            <summary>
            Gets the builder used to generate ID for entries from this entity set.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Gets the builder used to generate navigation link for the given navigation property for entries from this entity set.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The link builder.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding"/> for the navigation property with the given name.
            </summary>
            <param name="propertyName">The name of the navigation property.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding"/>.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
            <summary>
            Gets the navigation targets of this entity set.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
            <summary>
            Gets the entity type contained in this entity set.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
            <summary>
            Gets the backing clr type for the entity type contained in this entity set.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
            <summary>
            Gets the name of this entity set.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
            <summary>
            Adds a self link to the feed.
            </summary>
            <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
            <summary>
            Adds a self link to the feed.
            </summary>
            <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
        </member>
        <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
            <summary>
            Represents an <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration"/>.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration"/>.
            </summary>
            <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/> being used.</param>
            <param name="clrType">The backing CLR type for this entity type.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
            <summary>
            Marks this entity type as abstract.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
            <summary>
            Configures the key property(s) for this entity type.
            </summary>
            <param name="keyProperty">The property to be added to the key properties of this entity type.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
            <summary>
            Removes the property from the entity keys collection.
            </summary>
            <param name="keyProperty">The key to be removed.</param>
            <remarks>This method just disable the property to be not a key anymore. It does not remove the property all together.
            To remove the property completely, use the method <see cref="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"/></remarks>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
            <summary>
            Sets the base type of this entity type to <c>null</c> meaning that this entity type 
            does not derive from anything.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
            <summary>
            Sets the base type of this entity type.
            </summary>
            <param name="baseType">The base entity type.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a new EDM primitive property to this entity type.
            </summary>
            <param name="propertyInfo">The backing CLR property.</param>
            <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration"/> of the added property.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a new EDM complex property to this entity type.
            </summary>
            <param name="propertyInfo">The backing CLR property.</param>
            <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration"/> of the added property.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a new EDM collection property to this entity type.
            </summary>
            <param name="propertyInfo">The backing CLR property.</param>
            <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration"/> of the added property.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
            <summary>
            Adds a new EDM navigation property to this entity type.
            </summary>
            <param name="navigationProperty">The backing CLR property.</param>
            <param name="multiplicity">The <see cref="T:Microsoft.Data.Edm.EdmMultiplicity"/> of the navigation property.</param>
            <returns>Returns the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"/> of the added property.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.EdmTypeKind"/> of this <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration"/>
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
            <summary>
            Gets the collection of <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"/> of this entity type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
            <summary>
            Gets the collection of keys for this entity type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
            <summary>
            Gets or sets a value indicating whether this type is abstract.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
            <summary>
            Gets or sets the base type of this entity type.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.
            </summary>
            <typeparam name="TEntityType">The backing CLR type for this <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/>.</typeparam>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder)">
            <summary>
            Initializes a new instance of <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration"/>.
            </summary>
            <param name="modelBuilder">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/> being used.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
            <summary>
            Marks this entity type as abstract.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
            <summary>
            Sets the base type of this entity type to <c>null</c> meaning that this entity type 
            does not derive from anything.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
            <summary>
            Sets the base type of this entity type.
            </summary>
            <typeparam name="TBaseType">The base entity type.</typeparam>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures the key property(s) for this entity type.
            </summary>
            <typeparam name="TKey">The type of key.</typeparam>
            <param name="keyDefinitionExpression">A lambda expression representing the property to be used as the primary key. For example, in C# t => t.Id and in Visual Basic .Net Function(t) t.Id.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Configures a many relationship from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t => t.MyProperty and in Visual Basic .Net Function(t) t.MyProperty.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures an optional relationship from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t => t.MyProperty and in Visual Basic .Net Function(t) t.MyProperty.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures a required relationship from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# t => t.MyProperty and in Visual Basic .Net Function(t) t.MyProperty.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
            <summary>
            Create an Action that binds to this EntityType.
            </summary>
            <param name="name">The name of the action.</param>
            <returns>The ActionConfiguration to allow further configuration of the new Action.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
            <summary>
            Create an Action that sometimes binds to this EntityType
            </summary>
            <param name="name">The name of the action.</param>
            <returns>The ActionConfiguration to allow further configuration of the new 'transient' Action.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
            <summary>
            Gets the base type of this entity type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
            <summary>
            Gets the collection of <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"/> of this entity type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
            <summary>
            Used to access a Collection of Entities throw which you can configure
            actions that are bindable to EntityCollections.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
            <summary>
            Represents a non-binding procedure parameter.
            <remarks>
            Non binding parameters are provided in the POST body for Actions
            Non binding parameters are provided in 3 ways for Functions
            - ~/.../Function(p1=value)
            - ~/.../Function(p1=@x)?@x=value
            - ~/.../Function?p1=value (only allowed if the Function is the last url path segment).
            </remarks>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
            <summary>
            <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder"/> is used to automatically map CLR classes to an EDM model based on a set of <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention"/>.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
            <summary>
            <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/> is used to map CLR classes to an EDM model.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
            <summary>
            Registers an entity type as part of the model and returns an object that can be used to configure the entity.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <typeparam name="TEntityType">The type to be registered or configured.</typeparam>
            <returns>The configuration object for the specified entity type.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
            <summary>
            Registers a type as a complex type in the model and returns an object that can be used to configure the complex type.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <typeparam name="TComplexType">The type to be registered or configured.</typeparam>
            <returns>The configuration object for the specified complex type.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
            <summary>
            Registers an entity set as a part of the model and returns an object that can be used to configure the entity set.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <typeparam name="TEntityType">The entity type of the entity set.</typeparam>
            <param name="name">The name of the entity set.</param>
            <returns>The configuration object for the specified entity set.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
            <summary>
            Registers an entity type as part of the model and returns an object that can be used to configure the entity.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <param name="type">The type to be registered or configured.</param>
            <returns>The configuration object for the specified entity type.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
            <summary>
            Registers an complex type as part of the model and returns an object that can be used to configure the entity.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <param name="type">The type to be registered or configured.</param>
            <returns>The configuration object for the specified complex type.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
            <summary>
            Adds a procedure to the model.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
            <summary>
            Registers an entity set as a part of the model and returns an object that can be used to configure the entity set.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <param name="name">The name of the entity set.</param>
            <param name="entityType">The type to be registered or configured.</param>
            <returns>The configuration object for the specified entity set.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
            <summary>
            Removes the type from the model.
            </summary>
            <param name="type">The type to be removed</param>
            <returns><see>true</see> if the type is present in the model and <see>false</see> otherwise.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
            <summary>
            Removes the entity set from the model.
            </summary>
            <param name="name">The name of the entity set to be removed</param>
            <returns><see>true</see> if the entity set is present in the model and <see>false</see> otherwise.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
            <summary>
            Remove the procedure from the model
            <remarks>
            If there is more than one procedure with the name specified this method will not work.
            You need to use the other RemoveProcedure(..) overload instead.
            </remarks>
            </summary>
            <param name="name">The name of the procedure to be removed</param>
            <returns><see>true</see> if the procedure is present in the model and <see>false</see> otherwise.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
            <summary>
            Remove the procedure from the model
            </summary>
            <param name="procedure">The procedure to be removed</param>
            <returns><see>true</see> if the procedure is present in the model and <see>false</see> otherwise.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
            <summary>
            Attempts to find either a pre-configured structural type or a primitive type that matches the T.
            If no matches are found NULL is returned.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
            <summary>
            Creates a <see cref="T:Microsoft.Data.Edm.IEdmModel"/> based on the configuration performed using this builder. 
            </summary>
            <returns>The model that was built.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
            <summary>
            The namespace that will be used for the resulting model
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
            <summary>
            The name of the container that will hold all the EntitySets, Actions and Functions
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
            <summary>
            The collection of EDM entity sets in the model to be built.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
            <summary>
            The collection of EDM types in the model to be built.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
            <summary>
            The collection of Procedures (i.e. Actions, Functions and ServiceOperations) in the model to be built
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
            <summary>
            Initializes a new <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder"/>.
            </summary>
            <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration"/> to use.</param>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
            <summary>
            Excludes a type from the model. This is used to remove types from the model that were added by convention during initial model discovery.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>The same <c ref="ODataConventionModelBuilder"/> so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
            <summary>
            Excludes a type or types from the model. This is used to remove types from the model that were added by convention during initial model discovery.
            </summary>
            <param name="types">The types to be excluded from the model.</param>
            <returns>The same <c ref="ODataConventionModelBuilder"/> so that multiple calls can be chained.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
            <summary>
            Used to configure a primitive property of an entity type or complex type.
            This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
            <summary>
            Configures the property to be optional.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
            <summary>
            Configures the property to be required.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
            <summary>
            Represents a PrimitiveType
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
            <summary>
            This constructor is public only for unit testing purposes.
            To get a PrimitiveTypeConfiguration use ODataModelBuilder.GetTypeConfigurationOrNull(Type)
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
            <summary>
            Returns the IEdmPrimitiveType associated with this PrimitiveTypeConfiguration
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
            <summary>
            The Kind of OData Procedure.
            One of Action, Function or ServiceOperation.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Builder.Conventions.EntityKeyConvention">
            <summary>
            <see cref="T:System.Web.Http.OData.Builder.Conventions.EntityTypeConvention"/> for figuring out the entity keys.
            <remarks>This convention configures properties that are named 'ID' (case-insensitive) or {EntityName}+ID (case-insensitive) as the key.</remarks>
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Builder.Conventions.EntityKeyConvention.Apply(System.Web.Http.OData.Builder.EntityTypeConfiguration,System.Web.Http.OData.Builder.ODataModelBuilder)">
            <summary>
            Figures out the key properties and marks them as Keys in the EDM model.
            </summary>
            <param name="entity">The entity type being configured.</param>
            <param name="model">The <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder"/>.</param>
        </member>
        <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
            <summary>
            An instance of <see cref="T:System.Web.Http.OData.EntityInstanceContext`1"/> gets passed to the self link (<see cref="M:EntitySetConfiguration.HasIdLink"/>, <see cref="M:EntitySetConfiguration.HasEditLink"/>, <see cref="M:EntitySetConfiguration.HasReadLink"/>)
            and navigation link (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink"/>, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink"/>) builders and can be used by the link builders to generate links.
            </summary>
            <typeparam name="TEntityType">The entity type</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.EntityInstanceContext">
            <summary>
            An instance of <see cref="T:System.Web.Http.OData.EntityInstanceContext`1"/> gets passed to the self link (<see cref="M:EntitySetConfiguration.HasIdLink"/>, <see cref="M:EntitySetConfiguration.HasEditLink"/>, <see cref="M:EntitySetConfiguration.HasReadLink"/>)
            and navigation link (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink"/>, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink"/>) builders and can be used by the link builders to generate links.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.IEdmModel"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.IEdmEntitySet"/> this instance belongs to.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/> of this entity instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
            <summary>
            Gets the value of this entity instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.UrlHelper">
            <summary>
            Gets the <see cref="P:System.Web.Http.OData.EntityInstanceContext.UrlHelper"/> to be used for generating links while serializing this entity instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.PathHandler">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> to be used for generating OData paths while serializing this entity instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
            <summary>
            Gets whether ActionAvailabilityChecks should be performed or not.
            This is used to tell the formatter whether to check availability of an action before including a link to it.
            When in a feed we skip this check.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.CompiledPropertyAccessor`1">
            <summary>
            CompiledPropertyAccessor is a <see cref="T:System.Web.Http.OData.PropertyAccessor`1"/> that pre-compiles (using expression)
            a Getter and Setter for the PropertyInfo of TEntityType provided via the constructor.
            </summary>
            <typeparam name="TEntityType">The type on which the PropertyInfo exists</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.PropertyAccessor`1">
            <summary>
            Represents a strategy for Getting and Setting a PropertyInfo on <typeparamref name="TEntityType"/>
            </summary>
            <typeparam name="TEntityType">The type that contains the PropertyInfo</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataParameterBindingAttribute">
            <summary>
            This attribute ensures that The ODataFormatterParameterBinding is used.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Read an <see cref="T:Microsoft.Data.OData.IODataRequestMessage"/> using messageReader
            </summary>
            <param name="messageReader">The messageReader to use</param>
            <param name="readContext">The read context</param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
            <summary>
            The kind of ODataPayload this deserializer expects
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer`1">
            <summary>
            Base class for all <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer"/>'s that deserialize into an object backed by <see cref="T:Microsoft.Data.Edm.IEdmType"/>.
            </summary>
            <typeparam name="TItem">The item type that this deserializer understands.</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer">
            <summary>
            Base class for all <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer"/>'s that deserialize into an object backed by <see cref="T:Microsoft.Data.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer.ReadInline(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the item into a new object of type corresponding to <see cref="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer.EdmType"/>.
            </summary>
            <param name="item">The item to deserialize.</param>
            <param name="readContext">The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext"/></param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer.EdmType">
            <summary>
            The edm type.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer.DeserializerProvider">
            <summary>
            The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider"/> to use for deserializing inner items.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializer`1.ReadInline(`0,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the item into a new object of type corresponding to <see cref="P:EdmType"/>.
            </summary>
            <param name="item">The item to deserialize.</param>
            <param name="readContext">The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext"/></param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedAnnotation">
            <summary>
            The annotation used on ODataFeed instances to store the list of entries in that feed.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkAnnotation">
            <summary>
            The annotation used on ODataNavigationLink instances to store the list of children for that navigation link.
            </summary>
            <remarks>
            A navigation link for a singleton navigation property can only contain one item - either ODataEntry or ODataEntityReferenceLink.
            A navigation link for a collection navigation property can contain any number of items - each is either ODataFeed or ODataEntityReferenceLink.
            </remarks>
        </member>
        <member name="T:System.Web.Http.OData.FeedContext">
            <summary>
            Contains context information about the feed currently being serialized.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.IEdmEntitySet"/> this instance belongs to.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.FeedContext.UrlHelper">
            <summary>
            Gets the <see cref="P:System.Web.Http.OData.FeedContext.UrlHelper"/> to be used for generating navigation and self links while
            serializing this feed instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
            <summary>
            Gets the value of this feed instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.FeedContext.PathHandler">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> to be used for generating OData paths while serializing this feed.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.EdmTypeReferenceEqualityComparer">
            <summary>
            An equality comparer for <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/>.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataFormatterParameterBinding">
            <summary>
            A special HttpParameterBinding that uses a Per Request formatter instance with access to the Request.
            <remarks>
            This class is needed by some of the ODataDeserializers, since they actually need access to more than just the Request body,
            they also need to interrogate the RequestUri etc.
            </remarks>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
            <summary>
            Provides a <see cref="T:System.Web.Http.ModelBinding.IModelBinder"/> for EDM primitive types.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer">
            <summary>
            An ODataSerializer is used to write CLR objects to an ODataMessage. Each supported CLR type has a corresponding <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/>. A CLR type is 
            supported if it is one of the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload, 
            Uri[] which maps to ODataReferenceLinks payload, ODataWorkspace which maps to ODataServiceDocument payload.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
            <summary>
            Constructs an ODataSerializer that can generate OData payload of the specified kind.
            </summary>
            <param name="payloadKind">The kind of odata payload that this serializer generates</param>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.WriteObject(System.Object,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a whole using the given messageWriter and writeContext.
            </summary>
            <param name="graph">The object to be written</param>
            <param name="messageWriter">The <see cref="T:Microsoft.Data.OData.ODataMessageWriter"/> to be used for writing</param>
            <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext"/></param>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.WriteObjectInline(System.Object,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written</param>
            <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataWriter"/> to be used for writing</param>
            <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext"/></param>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.CreateProperty(System.Object,System.String,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Create a <see cref="T:Microsoft.Data.OData.ODataProperty"/> that gets written as a part of an <see cref="T:Microsoft.Data.OData.ODataItem"/> with the given propertyName 
            and the writeContext.
            </summary>
            <param name="graph">The object to be written </param>
            <param name="elementName">The name of the property to create</param>
            <param name="writeContext">The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext"/></param>
            <returns>The <see cref="T:Microsoft.Data.OData.ODataProperty"/> created.</returns>
        </member>
        <member name="T:System.Web.Http.OData.ODataResult`1">
            <summary>
            ODataResult is a feed of Entities that include additional information that OData Formats support
            Currently limited to: 
                the Count of all matching entities on the server (requested using $inlinecount=allpages) 
                the NextLink to retrieve the next page of results (added if the server enforces Server Driven Paging)
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.ODataResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
            <summary>
            Creates a partial set of results - used when server driven paging is enabled.
            </summary>
            <param name="items">The subset of matching results that should be serialized in this page.</param>
            <param name="nextPageLink">A link to the next page of matching results (if more exists).</param>
            <param name="count">A total count of matching results so clients can know the number of matches on the server.</param>
        </member>
        <member name="T:System.Web.Http.OData.Query.Expressions.ClrSafeFunctions">
            <summary>
            This class contains safe equivalents of CLR functions that
            could throw exceptions at runtime.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysNotEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
            <returns>true if the arrays are equal; false otherwise.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysNotEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
            <returns>true if the arrays are not equal; false otherwise.</returns>
        </member>
        <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
            <summary>
            Determine how to handle null propagation based on the
            query provider during query composition.  This is the
            default value used in <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings"/>
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
            <summary>
            Handle null propagation during query composition.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
            <summary>
            Do not handle null propagation during query composition.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
            <summary>
            This defines a composite OData query options that can be used to perform query composition. 
            Currently this only supports $filter, $orderby, $top, $skip.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
            <summary>
            This defines a composite OData query options that can be used to perform query composition. 
            Currently this only supports $filter, $orderby, $top, $skip, and $inlinecount.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/> class based on the incoming request and some metadata information from 
            the <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
            <param name="request">The incoming request message</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSupported(System.String)">
            <summary>
            Check if the given query is supported by the built in ODataQueryOptions.
            </summary>
            <param name="queryName">The name of the given query parameter.</param>
            <returns>returns true if the query parameter is one of the five that we support out of box.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The IQueryable that we are applying query against.</param>
            <returns>The query that the query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The IQueryable that we are applying query against.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <returns>The query that the query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.EnsureStableSortOrderBy(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.ODataQueryContext)">
            <summary>
            Ensures the given <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/> will produce a stable sort.
            If it will, the input <paramref name="orderBy"/> will be returned
            unmodified.  If the given <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/> will not produce a
            stable sort, a new <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/> instance will be created
            and returned.
            </summary>
            <param name="orderBy">The <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/> to evaluate.</param>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.</param>
            <returns>An <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/> that will produce a stable sort.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
            <summary>
            Limits the query results to a maximum number of results.
            </summary>
            <typeparam name="T">The entity CLR type</typeparam>
            <param name="queryable">The queryable to limit.</param>
            <param name="limit">The query result limit.</param>
            <param name="resultsLimited"><c>true</c> if the query results were limited; <c>false</c> otherwise</param>
            <returns>The limited query results.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
            <summary>
             Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext"/>
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
            <summary>
            Gets the request message associated with this instance.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
            <summary>
            Gets the raw string of all the OData query options
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Query.FilterQueryOption"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Query.SkipQueryOption"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Query.TopQueryOption"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
            <summary>
            Gets or sets the Filter Query Validator
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/> class based on the incoming request and some metadata information from 
            the <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
            <param name="request">The incoming request message</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The IQueryable that we are applying query against.</param>
            <returns>The query that the query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The IQueryable that we are applying query against.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <returns>The query that the query has been applied to.</returns>
        </member>
        <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
            <summary>
            This class describes the settings to use during query composition.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings"/> class
            and initializes the default settings.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
            <summary>
            Gets or sets a value indicating whether query composition should
            alter the original query when necessary to ensure a stable sort order.
            </summary>
            <value>A <c>true</c> value indicates the original query should
            be modified when necessary to guarantee a stable sort order.
            A <c>false</c> value indicates the sort order can be considered
            stable without modifying the query.  Query providers that ensure
            a stable sort order should set this value to <c>false</c>.
            The default value is <c>true</c>.</value>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
            <summary>
            Gets or sets a value indicating how null propagation should
            be handled during query composition. 
            </summary>
            <value>
            The default is <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default"/>.
            </value>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.MaxAnyAllExpressionDepth">
            <summary>
            Gets or sets the maximum depth of the Any or All elements nested inside the query.
            </summary>
            <remarks>
            This limit helps prevent Denial of Service attacks. The default value is 1.
            </remarks>
            <value>
            The maxiumum depth of the Any or All elements nested inside the query.
            </value>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
            <summary>
            Gets or sets the maximum number of query results to return.
            </summary>
            <value>
            The maximum number of query results to return, or <c>null</c> if there is no limit.
            </value>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
            <summary>
             Gets the raw $filter query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
            <summary>
             Gets the raw $orderby query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
            <summary>
             Gets the raw $top query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
            <summary>
             Gets the raw $skip query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
            <summary>
             Gets the raw $select query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
            <summary>
             Gets the raw $expand query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
            <summary>
             Gets the raw $inlineCount query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
            <summary>
             Gets the raw $skiptoken query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
            <summary>
            An implementation of <see cref="T:System.Web.Http.Filters.IFilterProvider"/> that applies an action filter to
            any action with an <see cref="T:System.Linq.IQueryable"/> or <see cref="T:System.Linq.IQueryable`1"/> return type
            that doesn't bind a parameter of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider"/> class.
            </summary>
            <param name="queryFilter">The action filter that executes the query.</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Provides filters to apply to the specified action.
            </summary>
            <param name="configuration">The server configuration.</param>
            <param name="actionDescriptor">The action descriptor for the action to provide filters for.</param>
            <returns>
            The filters to apply to the specified action.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
            <summary>
            Gets the action filter that executes the query.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
            <summary>
            Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.TopQueryOption"/> based on the raw $top value and 
            an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $top query. It can be null or empty.</param>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
            <summary>
            Apply the $top query to the given IQueryable.
            </summary>
            <param name="query">The IQueryable that we are applying top query against.</param>
            <returns>The query that the top query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the $top query to the given IQueryable.
            </summary>
            <param name="query">The IQueryable that we are applying top query against.</param>
            <returns>The query that the top query has been applied to.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
            <summary>
            Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>        
        </member>
        <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
            <summary>
            Gets the raw $top value.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
            <summary>
            Gets the value of the $top as a parsed integer.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
            <summary>
            Gets or sets the Top Query Validator
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Delta`1">
            <summary>
            A class the tracks changes (i.e. the Delta) for a particular <typeparamref name="TEntityType"/>.
            </summary>
            <typeparam name="TEntityType">TEntityType is the base type of entity this delta tracks changes for.</typeparam>
        </member>
        <member name="T:System.Web.Http.OData.IDelta">
            <summary>
            <see cref="T:System.Web.Http.OData.IDelta"/> allows and tracks changes to an object.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>Returns <c>true</c> if successful and <c>false</c> if not.</returns>
        </member>
        <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:System.Web.Http.OData.IDelta.Clear">
            <summary>
            Clears the <see cref="T:System.Web.Http.OData.IDelta"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:System.Web.Http.OData.Delta`1"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:System.Web.Http.OData.Delta`1"/>.
            </summary>
            <param name="entityType">The derived entity type for which the changes would be tracked.
            <paramref name="entityType"/> should be assignable to instances of <typeparamref name="TEntityType"/>.</param>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.Clear">
            <summary>
            Clears the Delta and resets the underlying Entity.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            <remarks>
            Only properties that exist on <see cref="P:System.Web.Http.OData.Delta`1.EntityType"/> can be set.
            If there is a type mismatch the request will fail.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on <see cref="P:System.Web.Http.OData.Delta`1.EntityType"/> can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>True if the Property was found</returns>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on <see cref="P:System.Web.Http.OData.Delta`1.EntityType"/> can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Overrides the DynamicObject TrySetMember method, so that only the properties
            of <see cref="P:System.Web.Http.OData.Delta`1.EntityType"/> can be set.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Overrides the DynamicObject TryGetMember method, so that only the properties
            of <see cref="P:System.Web.Http.OData.Delta`1.EntityType"/> can be got.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
            <summary>
            Returns the <see cref="P:System.Web.Http.OData.Delta`1.EntityType"/> instance
            that holds all the changes (and original values) being tracked by this Delta.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
            <summary>
            Copies the changed property values from the underlying entity (accessible via <see cref="M:System.Web.Http.OData.Delta`1.GetEntity"/>) 
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
            <summary>
            Copies the unchanged property values from the underlying entity (accessible via <see cref="M:System.Web.Http.OData.Delta`1.GetEntity"/>) 
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the changes tracked by this Delta.
            <remarks>The semantics of this operation are equivalent to a HTTP PATCH operation, hence the name.</remarks>
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the values stored in this Delta.
            <remarks>The semantics of this operation are equivalent to a HTTP PUT operation, hence the name.</remarks>
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="P:System.Web.Http.OData.Delta`1.EntityType">
            <summary>
            The actual type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
            <summary>
            This defines a $filter OData query option that can be used to perform query composition. 
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
            <summary>
            Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.FilterQueryOption"/> based on the raw $filter value and 
            an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $filter query. It can be null or empty.</param>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the filter query to the given IQueryable.
            </summary>
            <remarks>
            The <see cref="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation"/> property specifies
            how this method should handle null propagation.
            </remarks>
            <param name="query">The IQueryable that we are applying filter query against.</param>
            <param name="querySettings">Specifies if we need to handle null propagation. Pass false if the underlying query provider handles null propagation. Otherwise pass true.</param>
            <returns>The query that the filter query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
            <summary>
            Apply the filter query to the given IQueryable.
            </summary>
            <remarks>
            The <see cref="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation"/> property specifies
            how this method should handle null propagation.
            </remarks>
            <param name="query">The IQueryable that we are applying filter query against.</param>
            <param name="querySettings">Specifies if we need to handle null propagation. Pass false if the underlying query provider handles null propagation. Otherwise pass true.</param>
            <param name="assembliesResolver">The <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver"/> to use.</param>
            <returns>The query that the filter query has been applied to.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
            <summary>
             Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
            <summary>
            Gets or sets the Filter Query Validator
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
            <summary>
            Gets the parsed <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause"/> for this query option.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
            <summary>
             Gets the raw $filter value.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.ODataQueryContext">
            <summary>
            This defines some context information used to perform query composition. 
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(System.Type)">
            <summary>
            Constructs an instance of <see cref="T:System.Web.Http.OData.ODataQueryContext"/> based only on a CLR type. 
            </summary>
            <remarks>This is intended to be used only for primitive types.</remarks>
            <param name="clrType">The CLR type information.</param>
        </member>
        <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
            <summary>
            Constructs an instance of <see cref="T:System.Web.Http.OData.ODataQueryContext"/> with EdmModel and Entity's CLR type. 
            By default we assume the full name of the CLR type is used for the name for the EntitySet stored in the model.
            </summary>
            <param name="model">The EdmModel that includes the Entity and EntitySet information.</param>
            <param name="entityClrType">The entity's CLR type information.</param>
        </member>
        <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type,System.String)">
            <summary>
            Constructs an instance of <see cref="T:System.Web.Http.OData.ODataQueryContext"/> with EdmModel, Entity's CLR type and the name
            of EntitySet stored in the model.
            </summary>
            <param name="model">The EdmModel that includes the Entity and EntitySet information.</param>
            <param name="entityClrType">The entity's CLR type information.</param>
            <param name="entitySetName">The name of EntitySet stored in the model.</param>
        </member>
        <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type,Microsoft.Data.Edm.IEdmEntitySet)">
            <summary>
            Constructs an instance of <see cref="T:System.Web.Http.OData.ODataQueryContext"/> with EdmModel, Entity's CLR type and the corresponding
            EntitySet stored in the model. If the given EntitySet is not in the model, this constructor will throw.
            </summary>
            <param name="model">The EdmModel that includes the Entity and EntitySet information.</param>
            <param name="entityClrType">The entity's CLR type information.</param>
            <param name="entitySet">The corresponding EntitySet stored in the model.</param>
        </member>
        <member name="P:System.Web.Http.OData.ODataQueryContext.EntitySet">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.IEdmEntitySet"/> that represents a group of entities.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
            <summary>
            Gets the given <see cref="T:Microsoft.Data.Edm.IEdmModel"/> that contains the EntitySet.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.ODataQueryContext.EntityClrType">
            <summary>
            Gets the CLR type of the entity.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.ODataQueryContext.IsPrimitiveClrType">
            <summary>
            Gets a value indicating whether the current
            <see cref="T:System.Web.Http.OData.ODataQueryContext"/> instance is associated
            with a primitive CLR type.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
            <summary>
            Class describing the <see cref="T:Microsoft.Data.Edm.IEdmProperty"/> and <see cref="T:Microsoft.Data.OData.Query.OrderByDirection"/> for a single property
            in an OrderBy expression.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
            <summary>
            Instantiates a new instance of the <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode"/> class.
            </summary>
            <param name="property">The <see cref="T:Microsoft.Data.Edm.IEdmProperty"/> for this node.</param>
            <param name="direction">The <see cref="T:Microsoft.Data.OData.Query.OrderByDirection"/> for this node.</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
            <summary>
            Creates a collection of <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode"/> instances from a linked list of <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause"/> instances.
            </summary>
            <param name="orderByClause">The head of the <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause"/> linked list.</param>
            <returns>The collection of new <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode"/> instances.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
            <summary>
            Gets the <see cref="T:Microsoft.Data.Edm.IEdmProperty"/> for the current node.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Direction">
            <summary>
            Gets the <see cref="T:Microsoft.Data.OData.Query.OrderByDirection"/> for the current node.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
            <summary>
            This defines a $orderby OData query option that can be used to perform query composition. 
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
            <summary>
            Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/> based on the raw $orderby value and 
            an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $orderby query. It can be null or empty.</param>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
            <summary>
            Apply the $orderby query to the given IQueryable.
            </summary>
            <param name="query">The IQueryable that we are applying orderby query against.</param>
            <returns>The query that the orderby query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the $orderby query to the given IQueryable.
            </summary>
            <param name="query">The IQueryable that we are applying orderby query against.</param>
            <returns>The query that the orderby query has been applied to.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
            <summary>
             Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.PropertyNodes">
            <summary>
            Gets the collection of <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode"/> instance
            for the current <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption"/>.
            </summary>
            <remarks>
            This collection can be modified as needed.
            </remarks>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
            <summary>
             Gets the raw $orderby value.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
            <summary>
            Gets or sets the OrderBy Query Validator
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByClause">
            <summary>
            Gets the parsed <see cref="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByClause"/> for this query option.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
            <summary>
            Initialize a new instance of <see cref="T:System.Web.Http.OData.Query.SkipQueryOption"/> based on the raw $skip value and 
            an EdmModel from <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $skip query. It can be null or empty.</param>
            <param name="context">The <see cref="T:System.Web.Http.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.Data.Edm.IEdmModel"/> and some type information</param>
        </member>
        <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
            <summary>
            Apply the $skip query to the given IQueryable.
            </summary>
            <param name="query">The IQueryable that we are applying skip query against.</param>
            <returns>The query that the skip query has been applied to.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the $skip query to the given IQueryable.
            </summary>
            <param name="query">The IQueryable that we are applying skip query against.</param>
            <returns>The query that the skip query has been applied to.</returns>
        </member>
        <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
            <summary>
            Gets the given <see cref="T:System.Web.Http.OData.ODataQueryContext"/>.
            </summary>        
        </member>
        <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
            <summary>
            Gets the raw $skip value.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
            <summary>
            Gets the value of the $skip as a parsed integer.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
            <summary>
            Gets or sets the Skip Query Validator
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataMessageWrapper">
            <summary>
            Wrapper for IODataRequestMessage and IODataResponseMessage.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext">
            <summary>
            This class encapsulates the state and settings that get passed to <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer"/>
            from the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.IncrementCurrentReferenceDepth">
            <summary>
            Increments the current reference depth.
            </summary>
            <returns><c>false</c> if the current reference depth is greater than the maximum allowed and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.DecrementCurrentReferenceDepth">
            <summary>
            Decrements the current reference depth.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.IsPatchMode">
            <summary>
            Gets or sets whether the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter"/> is reading a 
            PATCH request.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.PatchEntityType">
            <summary>
            Gets or sets the type of <see cref="T:System.Web.Http.OData.Delta`1"/> being patched.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
            <summary>
            Gets or sets the <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> of the request.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
            <summary>
            Gets or set the EdmModel associated with the request.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
            <summary>
            ODataSerializer for serializing navigation links. For example, the response to the url
            http://localhost/Products(10)/$links/Category gets serialized using this.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntrySerializer">
            <summary>
            A ODataEntrySerializer is an ODataSerializer that serializes instances of <see cref="T:Microsoft.Data.Edm.IEdmType"/>'s.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataQueryProjectionNode">
            <summary>
            An ODataQueryProjectionNode represents the $expand and $select part of the OData query. The $expand and $select part of an OData query can be
            represented by a root ODataQueryProjectionNode (with name ""). Each ODataQueryProjectionNode in the Selects collection are the primitive/complex nodes/properties 
            that need to be written to the message and each ODataQueryProjectionNode in Expands collection are the navigations that need to be expanded in the message.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataQueryProjectionNode.Name">
            <summary>
            Gets or Sets the Name of the Property. Root Node has an empty name by convention.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataQueryProjectionNode.NodeType">
            <summary>
            The <see cref="T:Microsoft.Data.Edm.IEdmType"/> of this property.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataQueryProjectionNode.Selects">
            <summary>
            The list of properties that need to be selected for this entity. An empty collection signifies that all properties 
            need to be selected.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataQueryProjectionNode.Expands">
            <summary>
            The list of navigations that need to be expanded for this entity.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
            <summary>
            Parses an OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> and converts an <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> into an OData link.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor(Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler"/> class.
            </summary>
            <param name="model">The model to use for segment parsing.</param>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(System.String)">
            <summary>
            Parses the specified OData path as an <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> that contains additional information about the EDM type and entity set for the path.
            </summary>
            <param name="odataPath">The OData path to parse.</param>
            <returns>A parsed representation of the path, or <c>null</c> if the path does not match the model.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
            <summary>
            Parses the OData path into segments.
            </summary>
            <param name="odataPath">The OData path.</param>
            <returns>The segments of the OData path.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Parses the next OData path segment.
            </summary>
            <param name="previous">The previous path segment.</param>
            <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(System.String)">
            <summary>
            Parses the first OData segment following the service base URI.
            </summary>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Parses the next OData path segment following a collection.
            </summary>
            <param name="previous">The previous path segment.</param>
            <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Parses the next OData path segment following a complex-typed segment.
            </summary>
            <param name="previous">The previous path segment.</param>
            <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Parses the next OData path segment following an entity collection.
            </summary>
            <param name="previous">The previous path segment.</param>
            <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Parses the next OData path segment following a primitive property.
            </summary>
            <param name="previous">The previous path segment.</param>
            <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
            <summary>
            Parses the next OData path segment following an entity.
            </summary>
            <param name="previous">The previous path segment.</param>
            <param name="previousEdmType">The EDM type of the OData path up to the previous segment.</param>
            <param name="segment">The value of the segment to parse.</param>
            <returns>A parsed representation of the segment.</returns>
        </member>
        <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
            <summary>
            Converts an instance of <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> into an OData link.
            </summary>
            <param name="path">The OData path to convert into a link.</param>
            <returns>
            The generated OData link.
            </returns>
        </member>
        <member name="P:System.Web.Http.OData.Routing.DefaultODataPathHandler.Model">
            <summary>
            Gets the model used for segment parsing.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Routing.DefaultODataPathHandler.Container">
            <summary>
            Gets the container used to resolve procedures and entity sets.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Properties.SRResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ActionContextMustHaveDescriptor">
            <summary>
              Looks up a localized string similar to The HttpActionContext.ActionDescriptor is null..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ActionContextMustHaveRequest">
            <summary>
              Looks up a localized string similar to The HttpActionContext.Request is null..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ActionExecutedContextMustHaveActionContext">
            <summary>
              Looks up a localized string similar to The HttpActionExecutedContext.ActionContext is null..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ActionExecutedContextMustHaveRequest">
            <summary>
              Looks up a localized string similar to The HttpExecutedActionContext.Request is null..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ActionResolutionFailed">
            <summary>
              Looks up a localized string similar to Action resolution failed. Multiple actions matching the action identifier &apos;{0}&apos; were found. The matching actions are: {1}..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ArgumentMustBeOfType">
            <summary>
              Looks up a localized string similar to The argument must be of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.BinaryOperatorNotSupported">
            <summary>
              Looks up a localized string similar to A binary operator with incompatible types was detected. Found operand types &apos;{0}&apos; and &apos;{1}&apos; for operator kind &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotAddToNullCollection">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; on type &apos;{1}&apos; returned a null value. The input stream contains collection items which cannot be added if the instance is null..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotApplyODataQueryOptionsOfT">
            <summary>
              Looks up a localized string similar to Cannot apply {0} of &apos;{1}&apos; to {2} of &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotAutoCreateMultipleCandidates">
            <summary>
              Looks up a localized string similar to Cannot automatically bind the navigation property &apos;{0}&apos; on entity type &apos;{1}&apos; for the source entity set &apos;{2}&apos; because there are two or more matching target entity sets. The matching entity sets are: {3}..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotCastFilter">
            <summary>
              Looks up a localized string similar to Cannot cast $filter of type &apos;{0}&apos; to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotDefineKeysOnDerivedTypes">
            <summary>
              Looks up a localized string similar to Cannot define keys on type &apos;{0}&apos; deriving from &apos;{1}&apos;. Only the root type in the entity inheritance hierarchy can contain keys..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotInstantiateAbstractEntityType">
            <summary>
              Looks up a localized string similar to An instance of the abstract entity type &apos;{0}&apos; was found. Abstract entity types cannot be instantiated..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CanNotParseInteger">
            <summary>
              Looks up a localized string similar to Failed to convert &apos;{0}&apos; to an integer..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotPatchNavigationProperties">
            <summary>
              Looks up a localized string similar to Cannot apply PATCH to navigation property &apos;{0}&apos; on entity type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotRedefineBaseTypeProperty">
            <summary>
              Looks up a localized string similar to Cannot redefine property &apos;{0}&apos; already defined on the base type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CannotSerializerNull">
            <summary>
              Looks up a localized string similar to Cannot serialize a null &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CollectionPropertiesMustReturnIEnumerable">
            <summary>
              Looks up a localized string similar to CollectionProperties must implement IEnumerable&lt;&gt;. The Property &apos;{0}&apos; declared on &apos;{1}&apos; does not implement IEnumerable&lt;&gt;. .
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CollectionShouldHaveAddMethod">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the property &apos;{1}&apos; on type &apos;{2}&apos; does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ComplexTypeRefersToEntityType">
            <summary>
              Looks up a localized string similar to The complex type &apos;{0}&apos; refers to the entity type &apos;{1}&apos; through the property &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ConvertToEnumFailed">
            <summary>
              Looks up a localized string similar to Cannot compare an enum of type &apos;{0}&apos; to an expression of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CreatePropertyNotSupported">
            <summary>
              Looks up a localized string similar to {0} does not support CreateProperty..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.CreatingLinksByConventionNotSupported">
            <summary>
              Looks up a localized string similar to Creating Links by convention is not supported..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.DeltaEntityTypeNotAssignable">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; is not assignable to the Delta type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.DeltaTypeMismatch">
            <summary>
              Looks up a localized string similar to Cannot use Delta of type &apos;{0}&apos; on an entity of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.DeserializerDoesNotSupportRead">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; does not support Read..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.DoesNotSupportReadInLine">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; does not support ReadInline..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EdmTypeNotSupported">
            <summary>
              Looks up a localized string similar to {0} is not an supported edm type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntityClrTypeNotFound">
            <summary>
              Looks up a localized string similar to The model does not contain the entityClrType &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntityClrTypeNotMatchEntitySet">
            <summary>
              Looks up a localized string similar to The EntityClrType &apos;{0}&apos; does not match with the given entitySet &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntityClrTypeNotMatchEntitySetName">
            <summary>
              Looks up a localized string similar to The EntityClrType &apos;{0}&apos; does not match with the given entitySetName &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetAlreadyConfiguredDifferentEntityType">
            <summary>
              Looks up a localized string similar to The entity set &apos;{0}&apos; was already configured with a different EntityType (&apos;{1}&apos;)..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerErrorMessageLanguage">
            <summary>
              Looks up a localized string similar to en-US.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnmappedRequest">
            <summary>
              Looks up a localized string similar to This service doesn&apos;t support OData requests in the form &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnmappedRequestErrorCode">
            <summary>
              Looks up a localized string similar to Not implemented..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedCreate">
            <summary>
              Looks up a localized string similar to Creating entities is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedCreateLink">
            <summary>
              Looks up a localized string similar to Creating a &apos;{0}&apos; link is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedCreateLinkErrorCode">
            <summary>
              Looks up a localized string similar to Creating link failed..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedDelete">
            <summary>
              Looks up a localized string similar to Deleting entities is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedDeleteLink">
            <summary>
              Looks up a localized string similar to Deleting a &apos;{0}&apos; link is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedDeleteLinkErrorCode">
            <summary>
              Looks up a localized string similar to Deleting link failed..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedGet">
            <summary>
              Looks up a localized string similar to Getting entities is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedGetByKey">
            <summary>
              Looks up a localized string similar to Getting entities by key is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedGetByKeyErrorCode">
            <summary>
              Looks up a localized string similar to GET requests by key are not supported..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedGetKey">
            <summary>
              Looks up a localized string similar to Extracting the key from entity instances is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedMethodErrorCode">
            <summary>
              Looks up a localized string similar to {0} requests are not supported..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedPatch">
            <summary>
              Looks up a localized string similar to Patching entities is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetControllerUnsupportedUpdate">
            <summary>
              Looks up a localized string similar to Replacing entities is not supported for this entity set..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetHasNoBuildLinkAnnotation">
            <summary>
              Looks up a localized string similar to The entity set &apos;{0}&apos; is missing link generation configuration. Check that the self and edit links are configured during model building..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetMissingDuringSerialization">
            <summary>
              Looks up a localized string similar to The related entity set could not be found. The related entity set is required to serialize the payload..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetMustBeInTheModel">
            <summary>
              Looks up a localized string similar to The given entitySet must be in the given Entity Data Model..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetNotFound">
            <summary>
              Looks up a localized string similar to No EntitySet exists in the EdmModel with EntityClrType &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntitySetNotFoundForName">
            <summary>
              Looks up a localized string similar to No EntitySet exists in the EdmModel with entitySetName &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.EntityTypeMismatch">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; does not match the expected entity type &apos;{1}&apos; as set on the query context..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ErrorTypeMustBeODataErrorOrHttpError">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.FailedToBuildEdmModelBecauseReturnTypeIsNull">
            <summary>
              Looks up a localized string similar to Cannot create an EDM model as the action &apos;{0}&apos; on controller &apos;{1}&apos; has a void return type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.FailedToRetrieveTypeToBuildEdmModel">
            <summary>
              Looks up a localized string similar to Cannot create an EDM model as the action &apos;{0}&apos; on controller &apos;{1}&apos; has a return type &apos;{2}&apos; that does not implement IEnumerable&lt;T&gt;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.FormatterReadIsNotSupportedForType">
            <summary>
              Looks up a localized string similar to Reading type &apos;{0}&apos; is not supported by &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.FromODataUriRequiresPrimitive">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not a valid EDM primitive. The [FromODataUri] attribute can only be used on parameters with types that correspond to EDM primitives..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.FunctionNotSupportedOnEnum">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; function cannot be applied to an enumeration-typed argument..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.GetEdmModelCalledMoreThanOnce">
            <summary>
              Looks up a localized string similar to GetEdmModel cannot be called more than once. Consider using a different instance of the model builder or reusing the model you have built earlier..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.GetOnlyCollectionCannotBeArray">
            <summary>
              Looks up a localized string similar to The value of the property &apos;{0}&apos; on type &apos;{1}&apos; is an array. Consider adding a setter for the property..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.HasActionLinkRequiresBindToEntity">
            <summary>
              Looks up a localized string similar to To register an action link factory, actions must be bindable to a single entity. Action &apos;{0}&apos; does not meet this requirement..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidBindingParameterType">
            <summary>
              Looks up a localized string similar to Invalid bindingParameter type &apos;{0}&apos;. A bindingParameter must be either an EntityType or a Collection of EntityTypes..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidCastInPath">
            <summary>
              Looks up a localized string similar to Invalid cast encountered. Cast type &apos;{0}&apos; must be the same as or derive from the previous segment&apos;s type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidEntitySetName">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid entity set name..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidInlineCount">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid value for $inlinecount..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidParameterType">
            <summary>
              Looks up a localized string similar to Invalid parameter type &apos;{0}&apos;. A non-binding parameter type must be either Primitive, Complex, Collection of Primitive or a Collection of Complex..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidPathSegment">
            <summary>
              Looks up a localized string similar to The URI segment &apos;{0}&apos; is invalid after the segment &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.InvalidReturnTypeForQuerying">
            <summary>
              Looks up a localized string similar to The action &apos;{0}&apos; on controller &apos;{1}&apos; with return type &apos;{2}&apos; cannot support querying. Ensure the type of the returned content is IEnumerable, IQueryable, or a generic form of either interface..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ItemMustBeOfType">
            <summary>
              Looks up a localized string similar to The item must be of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.KeyValueCannotBeNull">
            <summary>
              Looks up a localized string similar to Key property &apos;{0}&apos; of type &apos;{1}&apos; is null. Key properties cannot have null values..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.LambdaExpressionMustHaveExactlyOneParameter">
            <summary>
              Looks up a localized string similar to The LambdaExpression must have exactly one parameter..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ManyToManyNavigationPropertyMustReturnCollection">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; on the type &apos;{1}&apos; is being configured as a Many-to-Many navigation property. Many to Many navigation properties must be collections..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MappingDoesNotContainEntityType">
            <summary>
              Looks up a localized string similar to The provided mapping doesn&apos;t contain an entry for the entity type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MaxAnyAllExpressionLimitExceeded">
            <summary>
              Looks up a localized string similar to The Any/All nesting limit of &apos;{0}&apos; has been exceeded. &apos;{1}&apos; can be configured on ODataQuerySettings or QueryableAttribute..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MemberExpressionsMustBeBoundToLambdaParameter">
            <summary>
              Looks up a localized string similar to MemberExpressions must be bound to the LambdaExpression parameter..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MemberExpressionsMustBeProperties">
            <summary>
              Looks up a localized string similar to Member &apos;{0}.{1}&apos; is not a property..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>
              Looks up a localized string similar to The binding context cannot have a null ModelMetadata..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MoreThanOneProcedureFound">
            <summary>
              Looks up a localized string similar to More than one Procedure called &apos;{0}&apos; was found. Try using the other RemoveProcedure override..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MultipleAttributesFound">
            <summary>
              Looks up a localized string similar to The member &apos;{0}&apos; on type &apos;{1}&apos; contains multiple instances of the attribute &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MultipleEntitySetMatchedClrType">
            <summary>
              Looks up a localized string similar to There are multiple EntitySets found that match EntityClrType &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MultipleMatchingClrTypesForEdmType">
            <summary>
              Looks up a localized string similar to More than one matching clr type found for the Edm type {0}.\nThe matching clr types are {1}..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MustBeCollectionProperty">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; property on &apos;{1}&apos; must be a Collection property..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MustBeComplexProperty">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; on type &apos;{1}&apos; must be a Complex property..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MustBeNavigationProperty">
            <summary>
              Looks up a localized string similar to The property  &apos;{0}&apos; on type &apos;{1}&apos; must be a Navigation property..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MustBePrimitiveProperty">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos;  on type &apos;{1}&apos; must be a Primitive property..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MustBePrimitiveType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be a primitive type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.MustHaveMatchingMultiplicity">
            <summary>
              Looks up a localized string similar to The multiplicity of the &apos;{0}&apos; property must be &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NavigationPropertyMissingDuringSerialization">
            <summary>
              Looks up a localized string similar to The related navigation property could not be found. The related navigation property is required to serialize the payload..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NavigationPropertyNotInHierarchy">
            <summary>
              Looks up a localized string similar to The declaring entity type &apos;{0}&apos; of the given navigation property is not a part of the entity type &apos;{1}&apos; hierarchy of the entity set &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoActionFoundForCollection">
            <summary>
              Looks up a localized string similar to Invalid action detected. &apos;{0}&apos; is not an action that can bind to &apos;Collection({1})&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoIdLinkFactoryFound">
            <summary>
              Looks up a localized string similar to No IdLink factory was found. Try calling HasIdLink on the EntitySetConfiguration for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoMatchingIEdmTypeFound">
            <summary>
              Looks up a localized string similar to No IEdmType could be found for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoMatchingResource">
            <summary>
              Looks up a localized string similar to No HTTP resource was found that matches the request URI &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoNavigationLinkFactoryFound">
            <summary>
              Looks up a localized string similar to No NavigationLink factory was found for the navigation property &apos;{0}&apos; from entity type &apos;{1}&apos; on entity set &apos;{2}&apos;. Try calling HasNavigationPropertyLink on the EntitySetConfiguration..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoODataFormatterForMetadata">
            <summary>
              Looks up a localized string similar to No OData formatter was found to write the OData metadata. Consider registering an appropriate ODataMediaTypeFormatter on the configuration&apos;s formatter collection..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoODataMediaTypeFormatterFound">
            <summary>
              Looks up a localized string similar to The ODataParameterBindingAttribute requires that an ODataMediaTypeFormatter be registered with the HttpConfiguration..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoRoutingHandlerToSelectAction">
            <summary>
              Looks up a localized string similar to No routing convention was found to select an action for the OData path with template &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NoRoutingHandlerToSelectController">
            <summary>
              Looks up a localized string similar to No routing convention was found to select a controller for the OData path with template &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NotAllowedArithmeticOperator">
            <summary>
              Looks up a localized string similar to Arithmetic operator &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on QueryableAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NotAllowedFunction">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on QueryableAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NotAllowedLogicalOperator">
            <summary>
              Looks up a localized string similar to Logical operator &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on QueryableAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NotAllowedOrderByProperty">
            <summary>
              Looks up a localized string similar to Order by &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on QueryableAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NotAllowedQueryOption">
            <summary>
              Looks up a localized string similar to Query option &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on QueryableAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.NullElementInCollection">
            <summary>
              Looks up a localized string similar to Collections cannot contain null elements..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ODataFunctionNotSupported">
            <summary>
              Looks up a localized string similar to Unknown function &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ODataPathMissing">
            <summary>
              Looks up a localized string similar to The operation cannot be completed because no ODataPath is available for the request..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.OnlySkipAndTopSupported">
            <summary>
              Looks up a localized string similar to Only $skip and $top OData query options are supported for this type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.OrderByDuplicateProperty">
            <summary>
              Looks up a localized string similar to Duplicate property named &apos;{0}&apos; is not supported in the OrderByNode..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.OrderByPropertyNotFound">
            <summary>
              Looks up a localized string similar to It is unsupported that the OrderByNode.Expression is not an instance of PropertyAccessQueryNode type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ParserModelMustHaveOneContainer">
            <summary>
              Looks up a localized string similar to The parser requires an EDM model with exactly 1 entity container. {0} entity containers were found..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PreviousSegmentEdmTypeCannotBeNull">
            <summary>
              Looks up a localized string similar to The previous path segment cannot have a null value as its EdmType..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PreviousSegmentMustBeCollectionType">
            <summary>
              Looks up a localized string similar to The previous segment&apos;s EDM type &apos;{0}&apos; must be a collection type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PreviousSegmentMustBeComplexType">
            <summary>
              Looks up a localized string similar to The previous segment&apos;s EDM type &apos;{0}&apos; must be a complex type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PreviousSegmentMustBeEntityCollectionType">
            <summary>
              Looks up a localized string similar to The previous segment&apos;s EDM type &apos;{0}&apos; must be an entity collection type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PreviousSegmentMustBeEntityType">
            <summary>
              Looks up a localized string similar to The previous segment&apos;s EDM type &apos;{0}&apos; must be an entity type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PrimitiveTypeRequired">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not a primitive type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyAlreadyDefinedInDerivedType">
            <summary>
              Looks up a localized string similar to Cannot define property &apos;{0}&apos; in the base entity type &apos;{1}&apos; as the derived type &apos;{2}&apos; already defines it..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyDoesNotBelongToType">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; does not belong to the type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyIsNotCollection">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the property &apos;{1}&apos; on type &apos;{2}&apos; must be a collection..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyMustBeString">
            <summary>
              Looks up a localized string similar to The value must be a string..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyMustBeStringLengthOne">
            <summary>
              Looks up a localized string similar to The value must be a string with a length of 1..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyMustBeStringMaxLengthOne">
            <summary>
              Looks up a localized string similar to The value must be a string with a maximum length of 1..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.PropertyMustHavePublicGetterAndSetter">
            <summary>
              Looks up a localized string similar to The PropertyInfo provided must have public &apos;get&apos; and &apos;set&apos; accessor methods..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.QueryCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The value for OData query &apos;{0}&apos; cannot be empty..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.QueryingRequiresObjectContent">
            <summary>
              Looks up a localized string similar to Queries can not be applied to a response content of type &apos;{0}&apos;. The response content must be an ObjectContent..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.QueryNodeBindingNotSupported">
            <summary>
              Looks up a localized string similar to Binding OData QueryNode of kind {0} is not supported by {1}..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.QueryParameterNotSupported">
            <summary>
              Looks up a localized string similar to The query parameter &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.RebindingNotSupported">
            <summary>
              Looks up a localized string similar to Rebinding is not supported..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.RecursionLimitExceeded">
            <summary>
              Looks up a localized string similar to The recursion limit has been exceeded..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.RecursiveComplexTypesNotAllowed">
            <summary>
              Looks up a localized string similar to The complex type &apos;{0}&apos; has a reference to itself through the property &apos;{1}&apos;. A recursive loop of complex types is not allowed..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.RequestMustContainConfiguration">
            <summary>
              Looks up a localized string similar to Request message does not contain an HttpConfiguration object..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.RequestNotActionInvocation">
            <summary>
              Looks up a localized string similar to The last segment of the request URI &apos;{0}&apos; was not recognized as an OData action..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.SegmentNullOrEmpty">
            <summary>
              Looks up a localized string similar to The segment value must not be null or empty..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.SkipTopLimitExceeded">
            <summary>
              Looks up a localized string similar to The limit of &apos;{0}&apos; for {1} query has been exceeded. The value from the incoming request is &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.TargetEntityTypeMissing">
            <summary>
              Looks up a localized string similar to Could not find the target entity type for the navigation property &apos;{0}&apos; on entity type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.TypeCannotBeComplexWasEntity">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; cannot be configured as a ComplexType. It was previously configured as an EntityType..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.TypeCannotBeEntityWasComplex">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; cannot be configured as a EntityType. It was previously configured as an ComplexType..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.TypeCannotBeSerialized">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot be serialized using the {1}..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.TypeDoesNotInheritFromBaseType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; does not inherit from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.TypeMustBeEntityCollection">
            <summary>
              Looks up a localized string similar to {0} is not a collection of type {1}. The ODataFeedSerializer can serialize only entity collections..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.UnableToDetermineMetadataUrl">
            <summary>
              Looks up a localized string similar to The ODataMediaTypeFormatter must be able to determine the metadata URL for a request in order to serialize the response..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.UnsupportedEdmTypeKind">
            <summary>
              Looks up a localized string similar to Found unsupported EdmTypeKind &apos;{0}&apos; in list of available types..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.UnsupportedExpressionNodeType">
            <summary>
              Looks up a localized string similar to Unsupported Expression NodeType..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.UnsupportedPrimitiveType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not a supported primitive type..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.UriQueryStringInvalid">
            <summary>
              Looks up a localized string similar to The query specified in the URI is not valid..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.ValueIsInvalid">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is invalid. {1}.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.WriteObjectInlineNotSupported">
            <summary>
              Looks up a localized string similar to {0} does not support WriteObjectInline..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.WriteObjectNotSupported">
            <summary>
              Looks up a localized string similar to {0} does not support WriteObject..
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Properties.SRResources.WriteToStreamAsyncMustHaveRequest">
            <summary>
              Looks up a localized string similar to The OData formatter does not support writing client requests. This formatter instance must have an associated request..
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
            <summary>
            <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> class to handle OData.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter._payloadKinds">
            <summary>
            The set of payload kinds this formatter will accept (in CanReadType and CanWriteType).
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <inheritdoc/>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <inheritdoc/>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <inheritdoc/>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <inheritdoc/>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.Model">
            <summary>
            The <see cref="T:Microsoft.Data.Edm.IEdmModel"/> used by this formatter.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteOnly">
            <summary>
            Gets or sets a value indicating whether to support serialization only (whether to disable deserialization
            support).
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider">
            <summary>
            The default <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider"/>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider">
            <summary>
            An ODataSerializerProvider is a factory for creating ODataSerializers.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
            <summary>
            Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/> for the given edmType.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/></param>
            <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/></returns>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(System.Type)">
            <summary>
            Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/> for the given clr <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/></param>
            <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/></returns>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.SetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializer)">
            <summary>
            Sets the ODataSerializer for the given edmType in the serializer cache.
            </summary>
            <param name="edmType"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.CreateEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
            <summary>
            Creates a new instance of the ODataSerializer for the given edm type.
            </summary>
            <param name="type">The <see cref="T:Microsoft.Data.Edm.IEdmTypeReference"/></param>
            <returns>The constructed <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/></returns>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.EdmModel">
            <summary>
            Gets or Sets the <see cref="T:Microsoft.Data.Edm.IEdmModel"/>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer">
            <summary>
            ODataSerializer for serializing collection of Entities or Complex types or primitives.
            </summary>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObject(System.Object,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateProperty(System.Object,System.String,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer">
            <summary>
            ODataSerializer for serializing complex types.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.ODataFormatterConstants">
            <summary>
            Constants related to OData.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer">
            <summary>
            ODataSerializer for serializing instances of <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer">
            <summary>
            OData serializer for serializing a collection of <see cref="T:Microsoft.Data.Edm.IEdmEntityType"/>
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer">
            <summary>
            ODataSerializer for serializing <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType"/>'s.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext">
            <summary>
            Context information used by the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer"/> when serializing objects in OData message format.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.UrlHelper">
            <summary>
            Gets or sets the URL helper.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.PathHandler">
            <summary>
            Gets or sets the <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> to use for generating OData paths.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.EntitySet">
            <summary>
            Gets or sets the entity set.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Path">
            <summary>
            Gets or sets the <see cref="T:System.Web.Http.OData.Routing.ODataPath"/> of the request.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
            <summary>
            Gets or sets the root element name which is used when writing primitive types
            and complex types.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
            <summary>
            Get or sets whether expensive links should be calculated.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
            <summary>
            Gets or sets the metadata level of the response.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.NextPageLink">
            <summary>
            The next page link, if any, to use when serializing a feed.
            </summary>
        </member>
        <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.InlineCount">
            <summary>
            The inline count, if any, to use when serializing a feed.
            </summary>
        </member>
        <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer">
            <summary>
            ODataSerializer for serializing <see cref="T:Microsoft.Data.OData.ODataWorkspace"/>'s for generating servicedoc's.
            </summary>
        </member>
        <member name="M:System.Web.Http.QueryableAttribute.#ctor">
            <summary>
            Enables a controller action to support OData query parameters.
            </summary>
        </member>
        <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
            <summary>
            Validates that the OData query of the incoming request is supported.
            </summary>
            <param name="request">The incoming request</param>
            <param name="queryOptions">The <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/> instance constructed based on the incoming request.</param>
            <remarks>
            Override this method to perform additional validation of the query. By default, the implementation
            throws an exception if the query contains unsupported query parameters.
            </remarks>
        </member>
        <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering">
            <summary>
            Gets or sets a value indicating whether query composition should
            alter the original query when necessary to ensure a stable sort order.
            </summary>
            <value>A <c>true</c> value indicates the original query should
            be modified when necessary to guarantee a stable sort order.
            A <c>false</c> value indicates the sort order can be considered
            stable without modifying the query.  Query providers that ensure
            a stable sort order should set this value to <c>false</c>.
            The default value is <c>true</c>.</value>
        </member>
        <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation">
            <summary>
            Gets or sets a value indicating how null propagation should
            be handled during query composition. 
            </summary>
            <value>
            The default is <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default"/>.
            </value>
        </member>
        <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth">
            <summary>
            Gets or sets the maximum depth of the Any or All elements nested inside the query.
            </summary>
            <remarks>
            This limit helps prevent Denial of Service attacks. The default value is 1.
            </remarks>
            <value>
            The maxiumum depth of the Any or All elements nested inside the query.
            </value>
        </member>
        <member name="P:System.Web.Http.QueryableAttribute.PageSize">
            <summary>
            Gets or sets the maximum number of query results to send back to clients.
            </summary>
            <value>
            The maximum number of query results to send back to clients.
            </value>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.GetEdmModel(System.Web.Http.HttpConfiguration)">
            <summary>
            Retrieve the EdmModel from the configuration Properties collection. Null if user has not set it.
            </summary>
            <param name="configuration">Configuration to look into.</param>
            <returns>Returns an EdmModel for this configuration</returns>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.SetEdmModel(System.Web.Http.HttpConfiguration,Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Sets the given EdmModel with the configuration.
            </summary>
            <param name="configuration">Configuration to be updated.</param>
            <param name="model">The EdmModel to update.</param>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.GetODataFormatters(System.Web.Http.HttpConfiguration)">
            <summary>
            Retrieve the OData <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/>s from the configuration. An empty list if user has not
            set it.
            </summary>
            <param name="configuration">Configuration to look into.</param>
            <returns>
            Returns a list of all OData <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/>s for this configuration.
            </returns>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.GetODataPathHandler(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> from the configuration.
            </summary>
            <param name="configuration">The server's configuration.</param>
            <returns>The <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> for the configuration.</returns>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.SetODataPathHandler(System.Web.Http.HttpConfiguration,System.Web.Http.OData.Routing.IODataPathHandler)">
            <summary>
            Sets the <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> on the configuration.
            </summary>
            <param name="configuration">The server's configuration.</param>
            <param name="parser">The <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler"/> this configuration should use.</param>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
            <summary>
            Enables query support for actions with an <see cref="T:System.Linq.IQueryable"/> or <see cref="T:System.Linq.IQueryable`1"/> return type.
            </summary>
            <param name="configuration">The server configuration.</param>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
            <summary>
            Enables query support for actions with an <see cref="T:System.Linq.IQueryable"/> or <see cref="T:System.Linq.IQueryable`1"/> return type.
            </summary>
            <param name="configuration">The server configuration.</param>
            <param name="queryFilter">The action filter that executes the query.</param>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableOData(System.Web.Http.HttpConfiguration,Microsoft.Data.Edm.IEdmModel)">
            <summary>
            Enables OData support by adding an OData route and enabling OData controller and action selection, querying, and formatter support for OData.
            </summary>
            <param name="configuration">The server configuration.</param>
            <param name="model">The EDM model to use for the service.</param>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableOData(System.Web.Http.HttpConfiguration,Microsoft.Data.Edm.IEdmModel,System.String)">
            <summary>
            Enables OData support by adding an OData route and enabling OData querying and OData controller and action selection.
            </summary>
            <param name="configuration">The server configuration.</param>
            <param name="model">The EDM model to use for the service.</param>
            <param name="routePrefix">The prefix to add to the OData route's path template.</param>
        </member>
        <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.GetODataRoutingConventions(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the OData routing conventions to use for controller and action selection.
            </summary>
            <param name="configuration">The server configuration.</param>
            <returns>A list of the OData routing conventions for the server.</returns>
        </member>
        <member name="T:System.Web.Http.ODataUrlHelperExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Web.Http.Routing.UrlHelper"/> class.
            </summary>
        </member>
        <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.IODataPathHandler,System.Web.Http.OData.Routing.ODataPathSegment[])">
            <summary>
            Generates an OData link using the default OData route name.
            </summary>
            <param name="urlHelper">The URL helper.</param>
            <param name="pathHandler">The path handler to use for generating the link.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
            <summary>
            Generates an OData link using the default OData route name.
            </summary>
            <param name="urlHelper">The URL helper.</param>
            <param name="pathHandler">The path handler to use for generating the link.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="M:System.Web.Http.TypeHelper.IsQueryPrimitiveType(System.Type)">
            <summary>
            Determines whether the given type is a primitive type or
            is a <see cref="T:System.String"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Decimal"/>,
            <see cref="T:System.Guid"/>, <see cref="T:System.DateTimeOffset"/> or <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="type">The type</param>
            <returns><c>true</c> if the type is a primitive type.</returns>
        </member>
        <member name="M:System.Web.Http.TypeHelper.GetInnerMostElementType(System.Type)">
            <summary>
            Returns the innermost element type for a given type, dealing with
            nullables, arrays, etc.
            </summary>
            <param name="type">The type from which to get the innermost type.</param>
            <returns>The innermost element type</returns>
        </member>
        <member name="M:System.Web.Http.TypeHelper.GetImplementedIEnumerableType(System.Type)">
            <summary>
            Returns type of T if the type implements IEnumerable of T, otherwise, return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:System.Web.Http.OData.Query.Expressions.FilterBinder">
            <summary>
            Translates an OData $filter parse tree represented by <see cref="T:Microsoft.Data.OData.Query.SemanticAst.FilterClause"/> to 
            an <see cref="T:System.Linq.Expressions.Expression"/> and applies it to an <see cref="T:System.Linq.IQueryable"/>.
            </summary>
        </member>
        <member name="F:System.Web.Http.OData.Query.Expressions.FilterBinder.MaxBindCount">
            <summary>
            restrict the maximum number of expressions that we generate to prevent DoS attacks.
            </summary>
        </member>
        <member name="T:System.Web.Http.Properties.CommonWebApiResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ArgumentInvalidAbsoluteUri">
            <summary>
              Looks up a localized string similar to Relative URI values are not supported: &apos;{0}&apos;. The URI must be absolute..
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ArgumentInvalidHttpUriScheme">
            <summary>
              Looks up a localized string similar to Unsupported URI scheme: &apos;{0}&apos;. The URI scheme must be either &apos;{1}&apos; or &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ArgumentMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ArgumentMustBeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ArgumentNullOrEmpty">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is null or empty..
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.ArgumentUriHasQueryOrFragment">
            <summary>
              Looks up a localized string similar to URI must not contain a query component or a fragment identifier..
            </summary>
        </member>
        <member name="P:System.Web.Http.Properties.CommonWebApiResources.InvalidEnumArgument">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
    </members>
</doc>
